
    -- Loading the OrionLib library
    local OrionLib = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Orion/main/source'))()
    if not OrionLib then
        error("Failed to load the OrionLib library")
        return
    end

    -- Creating the main window
    local Window = OrionLib:MakeWindow({
        Name = "Animal evolve simulator",
        HidePremium = false,
        SaveConfig = true,
        ConfigFolder = "WendelCfg",
        IntroEnabled = false
    })

    -- Table to store global variables
    local G = {
    Coins = false,
    Rebirth = false,
    Daily = false,

}

    -- Creating the Player tab
    local v1 = Window:MakeTab({
        Name = "Scripts",
        Icon = "rbxassetid://4483345998",
        PremiumOnly = false
    })
 
v1:AddToggle({
Name = "Auto Rebirth",
Default = false,
Callback = function(Value)
G.Rebirth = Value
if Value then
while G.Rebirth do
game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("RebirthEvent"):FireServer()
end
end
end,})

v1:AddToggle({
Name = "Free Apples",
Default = false,
Callback = function(Value)
G.Daily = Value
if Value then
while G.Daily do
local args = {
    [1] = "05/18/2024"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("DailyGiftEvent"):FireServer(unpack(args))end
end
end,})

v1:AddToggle({
Name = "Free EvoCoins",
Default = false,
Callback = function(Value)
G.Coins = Value
if Value then
while G.Coins do
local args = {
    [1] = "5000 EvoCoin0s",
    [2] = "EvoCoins"
}
game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("UpdateStatEvent"):FireServer(unpack(args))end
end
end,})



   v1:AddToggle({
        Name = "Apples",
        Default = false,
        Callback = function(Value)
            G.Daily = Value
            if Value then
                while G.Daily do
local args = {
    [1] = "05/18/2024"
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("DailyGiftEvent"):FireServer(unpack(args))
                end
            end
        end,
    })

