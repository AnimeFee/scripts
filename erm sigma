-- VARIABLES
local mobs = {} -- MOBS TABLE
getgenv().mob = nil -- SELECTED MOB
getgenv().enemy = nil -- SELECTED ENEMY

-- Function to update the mobs table
local function updateMobs()
    -- Clear the mobs table
    for i = #mobs, 1, -1 do
        table.remove(mobs, i)
    end

    -- Repopulate the mobs table
    for _, v in pairs(game:GetService("Workspace")._ENEMIES:GetChildren()) do
        local insert = true
        for _, v2 in pairs(mobs) do
            if v2 == v.Name then
                insert = false
                break
            end
        end
        if insert then
            table.insert(mobs, v.Name)
        end
    end
end

-- Initial population of the mobs table
updateMobs()

-- ORION UI LIBRARY
local OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/shlexware/Orion/main/source"))()
local Window = OrionLib:MakeWindow({Name = "Al Universe Hub", HidePremium = false, SaveConfig = true, ConfigFolder = "AlUniverseHub"})

-- MAIN
local MainTab = Window:MakeTab({Name = "Main", Icon = "rbxassetid://4483345998", PremiumOnly = false})

local MobFarmSection = MainTab:AddSection({Name = "Mob Farm"})

local mobdropdown
local enemydropdown

local function refreshDropdown()
    updateMobs()
    mobdropdown:Refresh(mobs)
end

mobdropdown = MobFarmSection:AddDropdown({Name = "Choose Mob", Default = "", Options = mobs, Callback = function(v)
    getgenv().mob = v
    local enemies = {}
    for _, enemy in pairs(game:GetService("Workspace")._ENEMIES:GetChildren()) do
        if enemy.Name == v then
            table.insert(enemies, enemy.Name.. " (".. enemy.Humanoid.Health.. " HP)")
        end
    end
    enemydropdown:Refresh(enemies)
end})

MobFarmSection:AddButton({Name = "Refresh Dropdown", Callback = function()
    refreshDropdown()
    OrionLib:MakeNotification({Name = "Refreshed!", Content = "Mob list has been refreshed.", Image = "rbxassetid://4483345998", Time = 2.5})
end})

enemydropdown = MobFarmSection:AddDropdown({Name = "Choose Enemy", Default = "", Options = {}, Callback = function(v)
    getgenv().enemy = v
end})

MobFarmSection:AddToggle({Name = "Start Mob Farm", Default = false, Callback = function(v)
    getgenv().autofarmmobs = v
    while wait() do
        if not getgenv().autofarmmobs then return end
        if not getgenv().mob then
            OrionLib:MakeNotification({Name = "Error!", Content = "You haven't selected a mob with the dropdown above\nUntoggle this toggle!", Image = "rbxassetid://4483345998", Time = 2.5})
            getgenv().autofarmmobs = false
            return
        end
        if not getgenv().enemy then
            OrionLib:MakeNotification({Name = "Error!", Content = "You haven't selected an enemy with the dropdown above\nUntoggle this toggle!", Image = "rbxassetid://4483345998", Time = 2.5})
            getgenv().autofarmmobs = false
            return
        end
        local enemy = game:GetService("Workspace")._ENEMIES:FindFirstChild(getgenv().enemy)
        if enemy then
            if enemy:FindFirstChild("Humanoid") and enemy.Humanoid.Health > 0 then
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = enemy.HumanoidRootPart.CFrame * CFrame.new(0, 0, 2)
                wait(0.1)
                enemy:Destroy()
            end
        end
    end
end})

-- UPDATING THE MOBS
game:GetService("Workspace")._ENEMIES.ChildAdded:Connect(function()
    refreshDropdown()
end)

game:GetService("Workspace")._ENEMIES.ChildRemoved:Connect(function()
    refreshDropdown()
end)

OrionLib:Init()
