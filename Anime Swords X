local OrionLib = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Orion/main/source'))()
if not OrionLib then
    error("Failed to load the OrionLib library")
    return
end

local Window = OrionLib:MakeWindow({
    Name = "Anime Swords X",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "WendelCfg",
    IntroEnabled = false
})

local BaldTab = Window:MakeTab({
    Name = "Scripts",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local Farms = Window:MakeTab({
    Name = "Farms",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local EGGSTab = Window:MakeTab({
    Name = "Eggs",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local BaldTab2 = Window:MakeTab({
    Name = "Potion/EquipBest/Gacha",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local BaldTab3 = Window:MakeTab({
    Name = "Stats",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local BaldTab4 = Window:MakeTab({
    Name = "Enter",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local PlayerTab = BaldTab:AddSection({Name="Scripts"});
local Eggs = EGGSTab:AddSection({Name="Auto Hatch Eggs"});
local W1 = Farms:AddSection({Name="One Piece"});
local W2 = Farms:AddSection({Name="Solo Leveling"});
local W3 = Farms:AddSection({Name="Jujutsu Kaise"});
local W4 = Farms:AddSection({Name="Dragon Ball"});
local W5 = Farms:AddSection({Name="Demon Slayer"});
local W6 = Farms:AddSection({Name="Sword Art Online"});
local W7 = Farms:AddSection({Name="Jojo Bizzare Adventure"});
local W8 = Farms:AddSection({Name="Black Clover"});

local BestTab = BaldTab2:AddSection({Name="Gacha/Equip Best"});
local PotionTab = BaldTab2:AddSection({Name="Potions"});
local StatsTab = BaldTab3:AddSection({Name="Stats"});
local DungeonTab = BaldTab4:AddSection({Name="Dungeon"});
local DungeonTab2 = BaldTab4:AddSection({Name="Auto Kill Dungeon Enemies"});



local G = {
Click=false,
Rebirth=false,
Gacha=false,
EquipPets=false,
EquipSwords=false,
Stat1=false,
Stat2=false,
Stat3=false,
Stat4=false,
egg1=false,
egg2=false,
egg3=false,
egg4=false,
egg5=false,
egg6=false,
egg7=false,
egg8=false,
WorldValue=nil,
World2Value=nil,
World3Value=nil,
World4Value=nil,
World5Value=nil,
World6Value=nil,
World7Value=nil,
World8Value=nil,
World=false,
World2=false,
World3=false,
World4=false,
World5=false,
World6=false,
World7=false,
World8=false,
BossWorld1=false,
BossWorld2=false,
BossWorld3=false,
BossWorld4=false,
BossWorld5=false,
BossWorld6=false,
BossWorld7=false,
BossWorld8=false,
DungeonKill=false};

PlayerTab:AddToggle({
    Name = "Auto Click",
    Default = false,
    Callback = function(Value)
        G.Click = Value
        if Value then
            while G.Click do
            local args = {
                [1] = "Attack",
                [2] = "Click",
                [3] = {
                ["Type"] = "Defense"
                }
                }
                game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
                wait(.01)
            end
        end
    end
})

PlayerTab:AddToggle({
    Name = "Auto Rank Up",
    Default = false,
    Callback = function(Value)
        G.Rebirth = Value
        if Value then
            while G.Rebirth do
            local args = {
            [1] = "RankUp",
            [2] = "Evolve"
            }
            game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
                wait(.01)
            end
        end
    end
})

BestTab:AddToggle({
    Name = "Spin Gacha(Shadows)",
    Default = false,
    Callback = function(Value)
        G.Gacha = Value
        if Value then
            while G.Gacha do
            local args = {
            [1] = "Gacha",
            [2] = "Spin"
            }
            game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
                wait(.01)
            end
        end
    end
})

BestTab:AddToggle({
    Name = "Auto Equip Best Pets",
    Default = false,
    Callback = function(Value)
        G.EquipPets = Value
        if Value then
            while G.EquipPets do
local args = {
    [1] = "Pets",
    [2] = "Best"
}

game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
                wait(.01)
            end
        end
    end
})

BestTab:AddToggle({
    Name = "Auto Equip Best Swords",
    Default = false,
    Callback = function(Value)
        G.EquipSwords = Value
        if Value then
            while G.EquipSwords do
local args = {
    [1] = "Swords",
    [2] = "Best"
}

game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
                wait(.01)
            end
        end
    end
})

EGGSTab:AddToggle({
    Name = "Auto Clown Island Egg(Needs To Be Close To The Egg)",
    Default = false,
    Callback = function(Value)
        G.egg1 = Value
        if Value then
            while G.egg1 do
local args = {
    [1] = "Stars",
    [2] = "Roll",
    [3] = {
        ["Map"] = "Clown Island",
        ["Type"] = "Open"
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
                wait(.01)
            end
        end
    end
})

EGGSTab:AddToggle({
    Name = "Auto Leveling Island Egg(Needs To Be Close To The Egg)",
    Default = false,
    Callback = function(Value)
        G.egg2 = Value
        if Value then
            while G.egg2 do
local args = {
    [1] = "Stars",
    [2] = "Roll",
    [3] = {
        ["Map"] = "Leveling Island",
        ["Type"] = "Open"
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
                wait(.01)
            end
        end
    end
})

EGGSTab:AddToggle({
    Name = "Auto Cursed Island Egg(Needs To Be Close To The Egg)",
    Default = false,
    Callback = function(Value)
        G.egg3 = Value
        if Value then
            while G.egg3 do
local args = {
    [1] = "Stars",
    [2] = "Roll",
    [3] = {
        ["Map"] = "Cursed Island",
        ["Type"] = "Open"
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
                wait(.01)
            end
        end
    end
})

EGGSTab:AddToggle({
    Name = "Auto Dragon Island Egg(Needs To Be Close To The Egg)",
    Default = false,
    Callback = function(Value)
        G.egg4 = Value
        if Value then
            while G.egg4 do
local args = {
    [1] = "Stars",
    [2] = "Roll",
    [3] = {
        ["Map"] = "Dragon Island",
        ["Type"] = "Open"
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
                wait(.01)
            end
        end
    end
})

EGGSTab:AddToggle({
    Name = "Auto Slayer Island Egg(Needs To Be Close To The Egg)",
    Default = false,
    Callback = function(Value)
        G.egg5 = Value
        if Value then
            while G.egg5 do
local args = {
    [1] = "Stars",
    [2] = "Roll",
    [3] = {
        ["Map"] = "Slayer Island",
        ["Type"] = "Open"
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
                wait(.01)
            end
        end
    end
})

EGGSTab:AddToggle({
    Name = "Auto Online Island Egg(Needs To Be Close To The Egg)",
    Default = false,
    Callback = function(Value)
        G.egg6 = Value
        if Value then
            while G.egg6 do
local args = {
    [1] = "Stars",
    [2] = "Roll",
    [3] = {
        ["Map"] = "Online Island",
        ["Type"] = "Open"
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
                wait(.01)
            end
        end
    end
})

EGGSTab:AddToggle({
    Name = "Auto Bizzare Island Egg(Needs To Be Close To The Egg)",
    Default = false,
    Callback = function(Value)
        G.egg7 = Value
        if Value then
            while G.egg7 do
local args = {
    [1] = "Stars",
    [2] = "Roll",
    [3] = {
        ["Map"] = "Bizzare Island",
        ["Type"] = "Open"
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
                wait(.01)
            end
        end
    end
})

EGGSTab:AddToggle({
    Name = "Auto Clover Island Egg(Needs To Be Close To The Egg)",
    Default = false,
    Callback = function(Value)
        G.egg8 = Value
        if Value then
            while G.egg8 do
local args = {
    [1] = "Stars",
    [2] = "Roll",
    [3] = {
        ["Map"] = "Clover Island",
        ["Type"] = "Open"
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
                wait(.01)
            end
        end
    end
})

PotionTab:AddButton({
    Name = "Use Energy Potions",
    Callback = function()
    local args = {
    [1] = "Potions",
    [2] = "Use",
    [3] = "Energy Potion"
}

game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))    
end
})

PotionTab:AddButton({
    Name = "Use Damage Potions",
    Callback = function()
    local args = {
    [1] = "Potions",
    [2] = "Use",
    [3] = "Damage Potion"
}

game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))    
end
})

PotionTab:AddButton({
    Name = "Use Gems Potions",
    Callback = function()
    local args = {
    [1] = "Potions",
    [2] = "Use",
    [3] = "Gems Potion"
}

game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))    
end
})

StatsTab:AddToggle({
    Name = "Auto Stat Energy",
    Default = false,
    Callback = function(Value)
        G.Stat1 = Value
        if Value then
            while G.Stat1 do
local args = {
    [1] = "SoloStatus",
    [2] = "Add",
    [3] = "Energy"
}

game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
                wait(.01)
            end
        end
    end
})

StatsTab:AddToggle({
    Name = "Auto Stat Gems",
    Default = false,
    Callback = function(Value)
        G.Stat2 = Value
        if Value then
            while G.Stat2 do
local args = {
    [1] = "SoloStatus",
    [2] = "Add",
    [3] = "Gems"
}

game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
                wait(.01)
            end
        end
    end
})

StatsTab:AddToggle({
    Name = "Auto Stat Damage",
    Default = false,
    Callback = function(Value)
        G.Stat3 = Value
        if Value then
            while G.Stat3 do
local args = {
    [1] = "SoloStatus",
    [2] = "Add",
    [3] = "Damage"
}

game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
                wait(.01)
            end
        end
    end
})

StatsTab:AddToggle({
    Name = "Auto Stat Lucky",
    Default = false,
    Callback = function(Value)
        G.Stat4 = Value
        if Value then
            while G.Stat4 do
local args = {
    [1] = "SoloStatus",
    [2] = "Add",
    [3] = "Lucky"
}

game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
                wait(.01)
            end
        end
    end
})





DungeonTab:AddButton({
    Name = "Enter Dungeon(Public)",
    Callback = function()
local args = {
    [1] = "Dungeon",
    [2] = "Start",
    [3] = "Public"
}

game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))  
end
})
DungeonTab:AddButton({
    Name = "Enter Dungeon(Private)",
    Callback = function()
local args = {
    [1] = "Dungeon",
    [2] = "Start",
    [3] = "Friend"
}

game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))  
end
})


PlayerTab:AddButton({
    Name = "Redeem Codes",
    Callback = function()
local args = {
    [1] = "Codes",
    [2] = "Redeem",
    [3] = "UPDATE4FIXES" -- Free Rewards (NEW)
}

game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))

args[3] = "UPDATE4" -- Free Rewards (NEW)
game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))

args[3] = "GRIMOIRES" -- Free Rewards (NEW)
game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))

args[3] = "UPDATE3FIXES" -- Free Rewards
game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))

args[3] = "UPDATE3BUFFS" -- Free Rewards
game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))

args[3] = "UPDATE3" -- Free Rewards
game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))

args[3] = "STANDS" -- Free Rewards
game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))

args[3] = "UPDATE2FIX" -- Free Rewards
game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))

args[3] = "Craft" -- Free Rewards
game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))

args[3] = "UPDATE1" -- Energy Potion and 2x Reset Status
game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))

args[3] = "UPDATE1FIX" -- Energy Potion and Reset Status
game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))

args[3] = "3KLIKES" -- Energy Potion and Reset Status
game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))

args[3] = "UPDATEBUFF" -- Pink Gems, Energy Potion, and Reset Status
game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))

args[3] = "BUGSFIX" -- Pink Gems, Energy Potion, and Reset Status
game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))

args[3] = "Release" -- 5 Shadow Keys
game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))

end
})

W1:AddDropdown({
    Name = "Clown Island",
    Default = "Bandit",
    Options = {"Bandit", "Kuro", "Alvida", "Kaku"},
    Callback = function(Value)
        G.WorldValue = Value
    end
})
W1:AddToggle({
    Name = "Auto Attack",
    Default = false,
    Callback = function(Value)
     World  = Value
	if Value then 
            while World do
                local args = {
                    [1] = "Attack",
                    [2] = "Click",
                    [3] = {
                        ["Enemy"] = workspace:WaitForChild("Server"):WaitForChild("Enemies"):WaitForChild("World"):WaitForChild("Clown Island"):WaitForChild(G.WorldValue),
                        ["Type"] = "World"
                    }
                }
                game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
		local args = {
                    [1] = "Attack",
                    [2] = "Click",
                    [3] = {
                        ["Enemy"] = workspace:WaitForChild("Server"):WaitForChild("Enemies"):WaitForChild("World"):WaitForChild("Clown Island"):WaitForChild(G.WorldValue),
                        ["Type"] = "World"
                    }
                }
                game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
		local args = {
                    [1] = "Attack",
                    [2] = "Click",
                    [3] = {
                        ["Enemy"] = workspace:WaitForChild("Server"):WaitForChild("Enemies"):WaitForChild("World"):WaitForChild("Clown Island"):WaitForChild(G.WorldValue),
                        ["Type"] = "World"
                    }
                }
                game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
                wait(.01)
            end
        end
    end
})

W2:AddDropdown({
    Name = "Leveling Island",
    Default = "Early Syng",
    Options = {"Early Syng", "Tom", "Shadow Monarch", "Hwunge"},
    Callback = function(Value)
        G.World2Value = Value
    end
})

W2:AddToggle({
    Name = "Auto Attack",
    Default = false,
    Callback = function(Value)
        G.World2 = Value
        if Value then
            while G.World2 do
                local args = {
                    [1] = "Attack",
                    [2] = "Click",
                    [3] = {
                        ["Enemy"] = workspace:WaitForChild("Server"):WaitForChild("Enemies"):WaitForChild("World"):WaitForChild("Leveling Island"):WaitForChild(G.World2Value),
                        ["Type"] = "World"
                    }
                }
                game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
                wait(.01)
            end
        end
    end
})

W3:AddDropdown({
    Name = "Cursed Island",
    Default = "Itado",
    Options = {"Itado", "Noba", "Megu", "Murky"},
    Callback = function(Value)
        G.World3Value = Value
    end
})

W3:AddToggle({
    Name = "Auto Attack",
    Default = false,
    Callback = function(Value)
        G.World3 = Value
        if Value then
            while G.World3 do
                local args = {
                    [1] = "Attack",
                    [2] = "Click",
                    [3] = {
                        ["Enemy"] = workspace:WaitForChild("Server"):WaitForChild("Enemies"):WaitForChild("World"):WaitForChild("Cursed Island"):WaitForChild(G.World3Value),
                        ["Type"] = "World"
                    }
                }
                game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
                wait(.01)
            end
        end
    end
})

W4:AddDropdown({
    Name = "Dragon Island",
    Default = "Vegete",
    Options = {"Vegete", "Gohen", "Tronks", "Broli"},
    Callback = function(Value)
        G.World4Value = Value
    end
})

W4:AddToggle({
    Name = "Auto Attack",
    Default = false,
    Callback = function(Value)
        G.World4 = Value
        if Value then
            while G.World4 do
                local args = {
                    [1] = "Attack",
                    [2] = "Click",
                    [3] = {
                        ["Enemy"] = workspace:WaitForChild("Server"):WaitForChild("Enemies"):WaitForChild("World"):WaitForChild("Dragon Island"):WaitForChild(G.World4Value),
                        ["Type"] = "World"
                    }
                }
                game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
                wait(.01)
            end
        end
    end
})

W5:AddDropdown({
    Name = "Slayer Island",
    Default = "Zenitsu",
    Options = {"Zenitsu", "Inosuke", "Nezuko", "Rengoku"},
    Callback = function(Value)
        G.World5Value = Value
    end
})

W5:AddToggle({
    Name = "Auto Attack",
    Default = false,
    Callback = function(Value)
        G.World5 = Value
        if Value then
            while G.World5 do
                local args = {
                    [1] = "Attack",
                    [2] = "Click",
                    [3] = {
                        ["Enemy"] = workspace:WaitForChild("Server"):WaitForChild("Enemies"):WaitForChild("World"):WaitForChild("Slayer Island"):WaitForChild(G.World5Value),
                        ["Type"] = "World"
                    }
                }
                game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
                wait(.01)
            end
        end
    end
})

W6:AddDropdown({
    Name = "Online Island",
    Default = "Alice",
    Options = {"Alice", "Leafa", "Asuna", "Eugeo"},
    Callback = function(Value)
        G.World6Value = Value
    end
})

W6:AddToggle({
    Name = "Execute",
    Default = false,
    Callback = function(Value)
        G.World6 = Value
        if Value then
            while G.World6 do
                local args = {
                    [1] = "Attack",
                    [2] = "Click",
                    [3] = {
                        ["Enemy"] = workspace:WaitForChild("Server"):WaitForChild("Enemies"):WaitForChild("World"):WaitForChild("Online Island"):WaitForChild(G.World6Value),
                        ["Type"] = "World"
                    }
                }
                game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
                wait(.01)
            end
        end
    end
})

W7:AddDropdown({
    Name = "Bizzare Island",
    Default = "Kakyon",
    Options = {"Kakyon", "Jonathan", "Josuko", "Giorne"},
    Callback = function(Value)
        G.World7Value = Value
    end
})

W7:AddToggle({
    Name = "Auto Attack",
    Default = false,
    Callback = function(Value)
        G.World7 = Value
        if Value then
            while G.World7 do
                local args = {
                    [1] = "Attack",
                    [2] = "Click",
                    [3] = {
                        ["Enemy"] = workspace:WaitForChild("Server"):WaitForChild("Enemies"):WaitForChild("World"):WaitForChild("Bizzare Island"):WaitForChild(G.World7Value),
                        ["Type"] = "World"
                    }
                }
                game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
                wait(.01)
            end
        end
    end
})

W8:AddDropdown({
    Name = "CLover Island",
    Default = "Finray",
    Options = {"Finray", "Vanessa", "Zenon", "Jiulius"},
    Callback = function(Value)
        G.World8Value = Value
    end
})

W8:AddToggle({
    Name = "Execute",
    Default = false,
    Callback = function(Value)
        G.World8 = Value
        if Value then
            while G.World8 do
                local args = {
                    [1] = "Attack",
                    [2] = "Click",
                    [3] = {
                        ["Enemy"] = workspace:WaitForChild("Server"):WaitForChild("Enemies"):WaitForChild("World"):WaitForChild("Clover Island"):WaitForChild(G.World8Value),
                        ["Type"] = "World"
                    }
                }
                game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
                wait(.01)
            end
        end
    end
})

W1:AddToggle({
    Name = "Kill Bigmom/Buggy",
    Default = false,
    Callback = function(Value)
        G.BossWorld1 = Value
        if Value then
            while G.BossWorld1 do
                local args = {
                    [1] = "Attack",
                    [2] = "Click",
                    [3] = {
                        ["Enemy"] = workspace:WaitForChild("Server"):WaitForChild("Enemies"):WaitForChild("Boss"):WaitForChild("Clown Island"):WaitForChild("Buggy"),
                        ["Type"] = "Boss"
                    }
                }
                game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
                wait(.01)
                local args = {
                    [1] = "Attack",
                    [2] = "Click",
                    [3] = {
                        ["Enemy"] = workspace:WaitForChild("Server"):WaitForChild("Enemies"):WaitForChild("Boss"):WaitForChild("Clown Island"):WaitForChild("Cake Mom"),
                        ["Type"] = "Boss"
                    }
                }
                game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
                wait(.01)            
	    end
        end
    end
})
W2:AddToggle({
    Name = "Auto Farm Cha",
    Default = false,
    Callback = function(Value)
        G.BossWorld2 = Value
        if Value then
            while G.BossWorld2 do
                local args = {
                    [1] = "Attack",
                    [2] = "Click",
                    [3] = {
                        ["Enemy"] = workspace:WaitForChild("Server"):WaitForChild("Enemies"):WaitForChild("Boss"):WaitForChild("Leveling Island"):WaitForChild("Cha"),
                        ["Type"] = "Boss"
                    }
                }
                game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
                wait(.01)
            end
        end
    end
})
W3:AddToggle({
    Name = "Auto Farm Guje/Gojou",
    Default = false,
    Callback = function(Value)
        G.BossWorld3= Value
        if Value then
            while G.BossWorld3 do
                local args = {
                    [1] = "Attack",
                    [2] = "Click",
                    [3] = {
                        ["Enemy"] = workspace:WaitForChild("Server"):WaitForChild("Enemies"):WaitForChild("Boss"):WaitForChild("Cursed Island"):WaitForChild("Guje"),
                        ["Type"] = "Boss"
                    }
                }
                game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
                wait(.01)
                local args = {
                    [1] = "Attack",
                    [2] = "Click",
                    [3] = {
                        ["Enemy"] = workspace:WaitForChild("Server"):WaitForChild("Enemies"):WaitForChild("Boss"):WaitForChild("Cursed Island"):WaitForChild("Gojou"),
                        ["Type"] = "Boss"
                    }
                }
                game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
                wait(.01)
            end
        end
    end
})
W4:AddToggle({
    Name = "Auto Farm Frieza",
    Default = false,
    Callback = function(Value)
        G.BossWorld4 = Value
        if Value then
            while G.BossWorld4 do
                local args = {
                    [1] = "Attack",
                    [2] = "Click",
                    [3] = {
                        ["Enemy"] = workspace:WaitForChild("Server"):WaitForChild("Enemies"):WaitForChild("Boss"):WaitForChild("Dragon Island"):WaitForChild("Frieza"),
                        ["Type"] = "Boss"
                    }
                }
                game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
                wait(0.01)
            end
        end
    end
})
W5:AddToggle({
    Name = "Auto Farm Tanjiro",
    Default = false,
    Callback = function(Value)
        G.BossWorld5 = Value
        if Value then
            while G.BossWorld5 do
                local args = {
                    [1] = "Attack",
                    [2] = "Click",
                    [3] = {
                        ["Enemy"] = workspace:WaitForChild("Server"):WaitForChild("Enemies"):WaitForChild("Boss"):WaitForChild("Slayer Island"):WaitForChild("Tanjiro"),
                        ["Type"] = "Boss"
                    }
                }
                game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
                wait(0.01)
            end
        end
    end
})
W6:AddToggle({
    Name = "Auto Farm Kirito",
    Default = false,
    Callback = function(Value)
        G.BossWorld6 = Value
        if Value then
            while G.BossWorld6 do
                local args = {
                    [1] = "Attack",
                    [2] = "Click",
                    [3] = {
                        ["Enemy"] = workspace:WaitForChild("Server"):WaitForChild("Enemies"):WaitForChild("Boss"):WaitForChild("Online Island"):WaitForChild("Kirito"),
                        ["Type"] = "Boss"
                    }
                }
                game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
                wait(0.01)
            end
        end
    end
})
W7:AddToggle({
    Name = "Auto Farm Jotaro",
    Default = false,
    Callback = function(Value)
        G.BossWorld7 = Value
        if Value then
            while G.BossWorld7 do
                local args = {
                    [1] = "Attack",
                    [2] = "Click",
                    [3] = {
                        ["Enemy"] = workspace:WaitForChild("Server"):WaitForChild("Enemies"):WaitForChild("Boss"):WaitForChild("Bizzare Island"):WaitForChild("Jotare"),
                        ["Type"] = "Boss"
                    }
                }
                game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
                wait(0.01)
            end
        end
    end
})
W8:AddToggle({
    Name = "Auto Farm Jotaro",
    Default =false,
    Callback = function(Value)
        G.BossWorld8 = Value
        if Value then
            while G.BossWorld8 do
                local args = {
                    [1] = "Attack",
                    [2] = "Click",
                    [3] = {
                        ["Enemy"] = workspace:WaitForChild("Server"):WaitForChild("Enemies"):WaitForChild("Boss"):WaitForChild("Clover Island"):WaitForChild("Asta"),
                        ["Type"] = "Boss"
                    }
                }
                game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
                wait(0.01)
            end
        end
    end
})

DungeonTab2:AddToggle({
    Name = "Dungeon Aura",
    Default = false,
    Callback = function(Value)
        G.DungeonKill = Value
        if Value then
            while G.DungeonKill do
                local args = {
                    [1] = "Attack",
                    [2] = "Click",
                    [3] = {
                        ["Enemy"] = workspace:WaitForChild("Server"):WaitForChild("Enemies"):WaitForChild("Dungeon"):WaitForChild("Early Syng"),
                        ["Type"] = "Dungeon"
                    }
                }
                game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
                wait(.01)
                local args = {
                    [1] = "Attack",
                    [2] = "Click",
                    [3] = {
                        ["Enemy"] = workspace:WaitForChild("Server"):WaitForChild("Enemies"):WaitForChild("Dungeon"):WaitForChild("Tom"),
                        ["Type"] = "Dungeon"
                    }
                }
                game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
                wait(.01)
                local args = {
                    [1] = "Attack",
                    [2] = "Click",
                    [3] = {
                        ["Enemy"] = workspace:WaitForChild("Server"):WaitForChild("Enemies"):WaitForChild("Dungeon"):WaitForChild("Shadow Monarch"),
                        ["Type"] = "Dungeon"
                    }
                }
                game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
                wait(.01)
                local args = {
                    [1] = "Attack",
                    [2] = "Click",
                    [3] = {
                        ["Enemy"] = workspace:WaitForChild("Server"):WaitForChild("Enemies"):WaitForChild("Dungeon"):WaitForChild("Hwunge"),
                        ["Type"] = "Dungeon"
                    }
                }
                game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
                wait(.01)
                local args = {
                    [1] = "Attack",
                    [2] = "Click",
                    [3] = {
                        ["Enemy"] = workspace:WaitForChild("Server"):WaitForChild("Enemies"):WaitForChild("Dungeon"):WaitForChild("Cha"),
                        ["Type"] = "Dungeon"
                    }
                }
                game:GetService("ReplicatedStorage"):WaitForChild("Bridge"):FireServer(unpack(args))
                wait(.01)
            end
        end
    end
})

OrionLib:Init()
