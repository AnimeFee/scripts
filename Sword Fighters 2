-- Loading the OrionLib library
local OrionLib = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Orion/main/source'))()
if not OrionLib then
    error("Failed to load the OrionLib library")
    return
end

-- Creating the main window
local Window = OrionLib:MakeWindow({
    Name = "Sword Fighters 2",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "WendelCfg",
    IntroEnabled = false
})

-- Table to store global variables
local G = {
    autoClick = false,
    autoEgg22 = false,
    autoEgg23 = false,
    autoEgg24 = false,
    autoMobs = false,
    autoQuest = false,
    autoDungeon = false,
    TpDungeon = false,
    TpWorld = false
}

-- Creating the Main tab
local MainTab = Window:MakeTab({
    Name = "Main",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Creating the Quest tab
local QuestTab = Window:MakeTab({
    Name = "Quest From all the worlds",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Creating the Egg tab
local EggTab = Window:MakeTab({
    Name = "Eggs From All Worlds",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Auto Click
MainTab:AddToggle({
    Name = "Auto Click",
    Default = false,
    Callback = function(Value)
        G.autoClick = Value
        if Value then
            while G.autoClick do
game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("ClickService"):WaitForChild("RF"):WaitForChild("Click"):InvokeServer()
                wait() -- Adjust the delay as needed
            end
        end
    end,
})

-- Auto Egg 22
EggTab:AddToggle({
    Name = "Auto Egg 22",
    Default = false,
    Callback = function(Value)
        G.autoEgg22 = Value
        if Value then
            while G.autoEgg22 do
                local args = {
                    [1] = {
                        ["eggName"] = "Egg 22",
                        ["auto"] = false,
                        ["amount"] = 2
                    }
                }
                game:GetService("ReplicatedStorage").Packages.Knit.Services.EggService.RF.BuyEgg:InvokeServer(unpack(args))
                wait() -- Adjust the delay as needed
            end
        end
    end,
})

-- Auto Egg 23
EggTab:AddToggle({
    Name = "Auto Egg 23",
    Default = false,
    Callback = function(Value)
        G.autoEgg23 = Value
        if Value then
            while G.autoEgg23 do
                local args = {
                    [1] = {
                        ["eggName"] = "Egg 23",
                        ["auto"] = false,
                        ["amount"] = 2
                    }
                }
                game:GetService("ReplicatedStorage").Packages.Knit.Services.EggService.RF.BuyEgg:InvokeServer(unpack(args))
                wait() -- Adjust the delay as needed
            end
        end
    end,
})

-- Auto Egg 24
EggTab:AddToggle({
    Name = "Auto Egg 24",
    Default = false,
    Callback = function(Value)
        G.autoEgg24 = Value
        if Value then
            while G.autoEgg24 do
                local args = {
                    [1] = {
                        ["eggName"] = "Egg 24",
                        ["auto"] = false,
                        ["amount"] = 2
                    }
                }
                game:GetService("ReplicatedStorage").Packages.Knit.Services.EggService.RF.BuyEgg:InvokeServer(unpack(args))
                wait() -- Adjust the delay as needed
            end
        end
    end,
})

-- Auto Mobs
MainTab:AddToggle({
    Name = "Auto Farm All Mobs",
    Default = false,
    Callback = function(Value)
        G.autoMobs = Value
        if Value then
            while G.autoMobs do
                wait(5) -- Pausa o loop por um curto período para evitar processamento excessivo
                
                local mobs = game.Workspace.Live.NPCs.Client:GetChildren() -- Obtém todos os NPCs na pasta designada
                if mobs then
                    for _, mob in ipairs(mobs) do
                        -- Verifica se o mob tem um humanoide e está vivo
if mob:FindFirstChild("Humanoid") and mob.Humanoid.Health > 0 then
                            local character = localPlayer.Character
                            if character and character:FindFirstChild("HumanoidRootPart") then
                                -- Move o personagem do jogador para a posição do mob
                                local humanoidRootPart = character.HumanoidRootPart
                                humanoidRootPart.CFrame = mob.HumanoidRootPart.CFrame
                                
                                -- Invoca funções do servidor para interagir com o mob
                                local args = {} -- Certifique-se de definir 'args' com os argumentos necessários
                                game:GetService("ReplicatedStorage").Packages.Knit.Services.ClickService.RF.Click:InvokeServer(unpack(args))
                                game:GetService("ReplicatedStorage").Packages.Knit.Services.ItemDropService.RF.ClaimItem:InvokeServer(unpack(args))
                            else
                                warn("Personagem do jogador local ou HumanoidRootPart não encontrado.")
                            end
                        end
                    end
                end
            end
        end
    end,
})

QuestTab:AddToggle({
    Name = "Auto Quest",
    Default = false,
    Callback = function(Value)
        G.autoQuest = Value
        if Value then
            while G.autoQuest do
                for i = 1, 22 do 
                    local args = {
                        [1] = "Area ".. i
                    }
                    
                    -- Invoca o serviço remoto de quest com os argumentos definidos
                    game:GetService("ReplicatedStorage").Packages.Knit.Services.QuestService.RF.ActionQuest:InvokeServer(unpack(args))
                end
            end
        end
    end,
})

-- Auto Dungeon
MainTab:AddToggle({
    Name = "Auto Dungeon",
    Default = false,
    Callback = function(Value)
        G.autoDungeon = Value
        if Value then
            while G.autoDungeon do
                local mobs = game.Workspace.Live.NPCs.Client:GetChildren()
                if mobs then
                    for _, mob in ipairs(mobs) do
                        if mob:FindFirstChild("Humanoid") and mob.Humanoid.Health > 0 then
                            local character = localPlayer.Character
                            if character and character:FindFirstChild("HumanoidRootPart") then
                                character.HumanoidRootPart.CFrame = mob.HumanoidRootPart.CFrame
                            else
                                warn("Local player character or HumanoidRootPart not found.")
                            end
                        end
                    end
                end
            end
        end
    end,
})

-- Teleport Dungeon
MainTab:AddButton({
    Name = "Teleport Dungeon",
    Default = false,
    Callback = function(Value)
        G.TpDungeon = Value
        if Value then
            while G.TpDungeon do
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-4121.21924, 323.23349, -6432.19434, -0.152210787, -4.37409007e-08, -0.988348067, -7.22107103e-08, 1, -3.31357484e-08, 0.988348067, 6.63256969e-08, -0.152210787) + Vector3.new(80, 0, 0)
            end
        end
    end,
})

-- Teleport World
MainTab:AddButton({
    Name = "Teleport World",
    Default = false,
    Callback = function(Value)
        G.TpWorld = Value
        if Value then
            while G.TpWorld do
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(8767.36523, 161.006012, 6792.77881, 1, 5.46722418e-08, 8.17064786e-13, -5.46722418e-08, 1, 3.50154217e-08, -8.1515041e-13, -3.50154217e-08, 1)
            end
        end
    end,
})

-- Virtual User
spawn(function()
    while wait(15) do
        local VirtualUser = game:service("VirtualUser");
        VirtualUser:CaptureController();
        VirtualUser:ClickButton2(Vector2.new());
    end
end);
