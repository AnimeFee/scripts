local OrionLib = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Orion/main/source'))()
local Window = OrionLib:MakeWindow({
Name = "Sword Fighters 2",
HidePremium = false,
SaveConfig = true,
ConfigFolder = "WendelCfg",
IntroEnabled = false
})

local G = {
    autoClick = false,
    autobuyegg = false,
    autoMobs = false,
    autoQuest = false,
    autoDungeon = false,
    autoEquipBestp = false,
    autoEquipBests = false,
    A1 = false,
    B1 = false,
    C1 = false,
}

local MainTab = Window:MakeTab({
    Name = "Main",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local UpgradesTab = Window:MakeTab({
    Name = "Upgrades",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local SnEggTab = Window:MakeTab({
    Name = "Swords/Eggs",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local TeleportTab = Window:MakeTab({
    Name = "Teleport",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local DungeonTab = Window:MakeTab({
    Name = "Dungeon",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

MainTab:AddToggle({
    Name = "Auto Click",
    Default = false,
    Callback = function(Value)
        G.autoClick = Value
        if Value then
            while G.autoClick do
game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("ClickService"):WaitForChild("RF"):WaitForChild("Click"):InvokeServer()
                wait() -- Adjust the delay as needed
            end
        end
    end,
})

SnEggTab:AddToggle({
    Name = "Auto Equip Best Sword",
    Default = false,
    Callback = function(Value)
        G.autoEquipBests = Value
        if Value then
            while G.autoEquipBests do
game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("WeaponInvService"):WaitForChild("RF"):WaitForChild("EquipBest"):InvokeServer()
                wait() -- Adjust the delay as needed
            end
        end
    end,
})

SnEggTab:AddToggle({
    Name = "Auto Equip Best Pets",
    Default = false,
    Callback = function(Value)
        G.autoEquipBestp = Value
        if Value then
            while G.autoEquipBestp do
game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("PetInvService"):WaitForChild("RF"):WaitForChild("EquipBest"):InvokeServer()                wait() -- Adjust the delay as needed
            end
        end
    end,
})

SnEggTab:AddDropdown({
    Name = "Eggs",
    Default = "Egg 1",
    Options = {"Egg 1","Egg 2","Egg 3","Egg 4","Egg 5","Egg 6","Egg 7","Egg 8","Egg 9","Egg 10","Egg 11","Egg 12","Egg 13","Egg 14","Egg 15","Egg 16","Egg 17","Egg 18","Egg 19","Egg 20","Egg 21","Egg 22","Egg 23","Egg 24"},
    Callback = function(Value)
        G.Egg = Value
    end
})

SnEggTab:AddToggle({
    Name = "Auto Buy Eggs",
    Default = false,
    Callback = function(Value)
        G.autobuyegg = Value
        if Value then
            while G.autobuyegg do
                local args = {
                    [1] = {
                        ["eggName"] = G.Egg,
                        ["auto"] = false,
                        ["amount"] = 1
                    }
                }
                game:GetService("ReplicatedStorage").Packages.Knit.Services.EggService.RF.BuyEgg:InvokeServer(unpack(args))
                wait() -- Adjust the delay as needed
            end
        end
    end,
})

UpgradesTab:AddToggle({
    Name = "Power Gain",
    Default = false,
    Callback = function(Value)
        G.A1 = Value
        if Value then
            for area = 1, 25 do
                local args = {
                    [1] = "Area "..area,
                    [2] = "Power Gain"
                }
                game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("UpgradeService"):WaitForChild("RF"):WaitForChild("Upgrade"):InvokeServer(args[1], args[2])
                wait(0.1) -- add a short delay to avoid flooding the server
            end
        end
    end
})


UpgradesTab:AddToggle({
    Name = "More Storage",
    Default = false,
    Callback = function(Value)
        G.A1 = Value
        if Value then
            for area = 1, 25 do
                local args = {
                    [1] = "Area "..area,
                    [2] = "More Storage"
                }
                game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("UpgradeService"):WaitForChild("RF"):WaitForChild("Upgrade"):InvokeServer(args[1], args[2])
                wait(0.1) -- add a short delay to avoid flooding the server
            end
        end
    end
})

UpgradesTab:AddToggle({
    Name = "Walk Speed",
    Default = false,
    Callback = function(Value)
        G.A1 = Value
        if Value then
            for area = 1, 25 do
                local args = {
                    [1] = "Area "..area,
                    [2] = "Walk Speed"
                }
                game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("UpgradeService"):WaitForChild("RF"):WaitForChild("Upgrade"):InvokeServer(args[1], args[2])
                wait(0.1) -- add a short delay to avoid flooding the server
            end
        end
    end
})


MainTab:AddToggle({
    Name = "Auto Quest",
    Default = false,
    Callback = function(Value)
        G.autoQuest = Value
        if Value then
            while G.autoQuest do
                for i = 1, 22 do 
                    local args = {
                        [1] = "Area ".. i
                    }
                    game:GetService("ReplicatedStorage").Packages.Knit.Services.QuestService.RF.ActionQuest:InvokeServer(unpack(args))
wait()                
end
            end
        end
    end,
})


TeleportTab:AddDropdown({
    Name = "Select World",
    Default = "1",
    Options = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25},
    Callback = function(Value)
        G.World = Value  -- Value is already a string, so no need to modify it
    end
})

TeleportTab:AddButton({
    Name = "Teleport World",
    Default = false,
    Callback = function()
        local args = {
            [1] = "Area "..area
        }

        game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("AnalyticsService"):WaitForChild("RF"):WaitForChild("SetPlayerRegion"):InvokeServer(unpack(args))
    end
})

spawn(function()
    while wait(15) do
        local VirtualUser = game:service("VirtualUser");
        VirtualUser:CaptureController();
        VirtualUser:ClickButton2(Vector2.new());
    end
end);
