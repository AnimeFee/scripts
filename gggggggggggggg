
local WeaponsInventory = require(game:GetService("ReplicatedStorage").Scripts.Client.Manager.PlayerManager);
local OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/shlexware/Orion/main/source"))();
if not OrionLib then
	local Window = OrionLib:MakeWindow({Name="MercilessHub",HidePremium=false,SaveConfig=true,ConfigFolder="WendelCfg",IntroEnabled=false});
	getgenv().Settings = {AutoAtk=false,AutoDungeon=false,AutoBuyGems={[10008]=false,[10009]=false,[10010]=false,[10011]=false,[10012]=false,[10013]=false,[10014]=false,[10015]=false,[10016]=false},mespetsequiper={},Range=200,AutoFarm=false,WalkToEnemy=false,DamageBoost=true,DamageNumber=0.99};
	local ScriptsTab = ABC:AddSection({Name="Idk belguga6969 is not a sigma"});
  	local SwordSec = ABC:AddSection({Name="Fuse/Sell Swords"});

   	 spawn(function()
		for i, v in pairs(getconnections(game:GetService("Players").LocalPlayer.Idled)) do
			v:Disable();
		end
	end);
	spawn(function()
		while wait(15) do
			local VirtualUser = game:service("VirtualUser");
			VirtualUser:CaptureController();
			VirtualUser:ClickButton2(Vector2.new());
		end
	end);
	local function AutoAtk()
		while getgenv().Settings.AutoAtk do
			game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 75;
			game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("PlayerClickAttack"):FireServer();
			wait(0.01);
		end
	end
	local PlayerTab = Window:MakeTab({Name="Player",Icon="rbxassetid://4483345998",PremiumOnly=false});
	local ABC = Window:MakeTab({Name="Scripts",Icon="rbxassetid://4483345998",PremiumOnly=false});
	local AutoBuyTab = Window:MakeTab({Name="Shop",Icon="rbxassetid://4483345998",PremiumOnly=false});
	ScriptsTab:AddToggle({Name="Kill Aura",Callback=function(state)
		if state then
			getgenv().Settings.AutoFarm = not getgenv().Settings.AutoFarm;
		end
	end});

	ScriptsTab:AddToggle({Name="AutoGainPower",Default=false,Callback=function(Value)
		autoGainPower = Value;
		while autoGainPower do
        game:GetService("ReplicatedStorage").Remotes.PlayerClickAttack:FireServer(unpack(args));
        end
	end});
	ScriptsTab:AddButton({Name="Auto Fuse Swords",Callback=function()
		while wait() do
			game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("FuseWeapon"):FireServer();
		end
	end});
	local playerNames = {};
	for _, player in pairs(game.Players:GetPlayers()) do
		table.insert(playerNames, player.Name);
	end
	PlayerTab:AddDropdown({Name="Select Player",Options=playerNames,Callback=function(selectedPlayer)
		getgenv().Settings.selectedPlayer = selectedPlayer;
	end});
	PlayerTab:AddButton({Name="Trade Selected Player",Callback=function()
		if getgenv().Settings.selectedPlayer then
			game:GetService("ReplicatedStorage").Remotes.SendTrade:InvokeServer(game:GetService("Players")[getgenv().Settings.selectedPlayer]);
		else
			warn("No player selected.");
		end
	end});
	PlayerTab:AddButton({Name="Refresh Player List",Callback=function()
		playerNames = {};
		for _, player in pairs(game.Players:GetPlayers()) do
			table.insert(playerNames, player.Name);
		end
		PlayerTab:GetElement("Select Player"):UpdateOptions(playerNames);
	end});
	PlayerTab:AddButton({Name="Anti-Lag",Callback=function()
	end});
	PlayerTab:AddButton({Name="Dupe",Callback=function()
		game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("DeleteMultipleHero"):Destroy();
	end});
	AutoBuyTab:AddButton({Name="AutoBuy Gem Level 7(Ruby)",Callback=function()
		while wait() do
			local args = {[1]=10014};
			game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("MapShopExchange"):FireServer(unpack(args));
		end
	end});
	AutoBuyTab:AddButton({Name="AutoBuy Gem Level 7(Sapphire)",Callback=function()
		while wait() do
			local args = {[1]=10015};
			game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("MapShopExchange"):FireServer(unpack(args));
		end
	end});
	AutoBuyTab:AddButton({Name="AutoBuy Gem Level 7(Emerald)",Callback=function()
		while wait() do
			local args = {[1]=10016};
			game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("MapShopExchange"):FireServer(unpack(args));
		end
	end});
	ScriptsTab:AddButton({Name="SimpleSpy",Callback=function()
		loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/78n/SimpleSpy/main/SimpleSpyBeta.lua"))();
	end});
	local AutoDungeonTab = Window:MakeTab({Name="Auto-Dungeon",Icon="rbxassetid://4483345998",PremiumOnly=false});
	local FuseTab = Window:MakeTab({Name="Auto-FuseGem",Icon="rbxassetid://4483345998",PremiumOnly=false});
	local function GetFirstFiveGemIDs(level)
		local player = game.Players.LocalPlayer;
		local gui = player:WaitForChild("PlayerGui");
		local gemsPanel = gui:WaitForChild("GemsPanel");
		local frame = gemsPanel:WaitForChild("Frame");
		local bgImage = frame:WaitForChild("BgImage");
		local list = bgImage:WaitForChild("List");
		local scrollingFrame = list:WaitForChild("ScrollingFrame");
		local gem1, gem2, gem3, gem4, gem5;
		if scrollingFrame then
			local count = 0;
			for _, child in ipairs(scrollingFrame:GetChildren()) do
				if (count >= 5) then
					break;
				end
				local numtext = child:FindFirstChild("NumText");
				if (numtext and (numtext.Text == ("Lv." .. level))) then
					count = count + 1;
					if (count == 1) then
						gem1 = child.Name;
					elseif (count == 2) then
						gem2 = child.Name;
					elseif (count == 3) then
						gem3 = child.Name;
					elseif (count == 4) then
						gem4 = child.Name;
					elseif (count == 5) then
						gem5 = child.Name;
					end
				end
			end
			if (count > 0) then
				print("Gem IDs found:");
				print("gem1:", gem1);
				print("gem2:", gem2);
				print("gem3:", gem3);
				print("gem4:", gem4);
				print("gem5:", gem5);
			else
				print("No gem IDs found.");
			end
		else
			error("Error: ScrollingFrame not found.");
		end
		return gem1, gem2, gem3, gem4, gem5;
	end
	local function FuseFirstFiveGems(level)
		while true do
			local gem1, gem2, gem3, gem4, gem5 = GetFirstFiveGemIDs(level);
			if (gem1 and gem2 and gem3 and gem4 and gem5) then
				local args = {[1]={[1]=gem1,[2]=gem2,[3]=gem3,[4]=gem4,[5]=gem5}};
				print("Invoking FuseGem remote with args:", args);
				game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("FuseGem"):InvokeServer(unpack(args));
			else
				print("Error: Could not find five gem IDs.");
			end
			wait(0.1);
		end
	end
	for i = 1, 9 do
		FuseTab:AddToggle({Name=("Auto Fuse Lvl " .. i .. " Gems"),Default=false,Callback=function(Value)
			getgenv().Settings["AutoFuseGemsLevel" .. i] = Value;
			if Value then
				while getgenv().Settings["AutoFuseGemsLevel" .. i] do
					FuseFirstFiveGems(i);
				end
			end
		end});
	end
	local AutoRaidTab = Window:MakeTab({Name="Auto-Raid",Icon="rbxassetid://4483345998",PremiumOnly=false});
	AutoRaidTab:AddButton({Name="AutoCollectChestInRaid",Callback=function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/xALLQWT/AUTORAID/main/g"))();
	end});
	local difficultyDropdown = AutoRaidTab:AddDropdown({Name="Difficulty",Options={"Easy","Medium","Hard","Impossible"},CurrentOption="1",Callback=function(option)
		getgenv().Settings.difficulty = tonumber(option);
	end});
	local AutoRaidToggle = AutoRaidTab:AddToggle({Name="Auto-Raid",Default=false,Callback=function(Value)
		if Value then
			local function restartScript()
				local userID = game.Players.LocalPlayer.UserId;
				local args = {[1]="Room3"};
				game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("EnterRaidRoom"):FireServer(unpack(args));
				args = {[1]={difficulty=getgenv().Settings.difficulty,roomName="Room3",selectMapId=50105}};
				game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("SelectRaidsDifficulty"):FireServer(unpack(args));
				args = {[1]={userIds={[1]=userID},roomName="Room3"}};
				game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("StartChallengeRaidMap"):InvokeServer(unpack(args));
				game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("LocalPlayerTeleportSuccess"):InvokeServer();
				wait(240);
				args = {[1]={currentSlotIndex=1,toMapId=50201}};
				game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("QuitRaidsMap"):InvokeServer(unpack(args));
				wait(60);
				restartScript();
			end
			restartScript();
		end
	end});
	local gems = {{Name="Lvl 3 Ruby",Value=10008},{Name="Lvl 3 Sapphire",Value=10009},{Name="Lvl 3 Emerald",Value=10010},{Name="Lvl 5 Ruby",Value=10011},{Name="Lvl 5 Sapphire",Value=10012},{Name="Lvl 5 Emerald",Value=10013},{Name="Lvl 7 Ruby",Value=10014},{Name="Lvl 7 Sapphire",Value=10015},{Name="Lvl 7 Emerald",Value=10016}};
	for _, gem in ipairs(gems) do
		AutoBuyTab:AddToggle({Name=("AutoBuy " .. gem.Name),Default=false,Callback=function(Value)
			getgenv().Settings.AutoBuyGems[gem.Value] = not getgenv().Settings.AutoBuyGems[gem.Value];
		end});
	end
	AutoDungeonTab:AddSection({Name="Auto-Dungeon"});
	local function TeleportToAndFromDungeon(dungeonMapId, returnMapId, returnTime)
		game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("LocalPlayerTeleport"):FireServer({mapId=dungeonMapId});
		wait(returnTime);
		game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("LocalPlayerTeleport"):FireServer({mapId=returnMapId});
	end
	local AutoDungeonToggle = AutoDungeonTab:AddToggle({Name="Auto-Dungeon(FINALLY FIXED!!!)",Default=false,Callback=function(Value)
		if Value then
			while true do
				local currentTime = os.time();
				local nextTeleportTime = (math.ceil(currentTime / (30 * 60)) * 30 * 60) - 15;
				local waitTime = nextTeleportTime - currentTime;
				wait(waitTime);
				TeleportToAndFromDungeon(50016, 50001, 15 * 60);
			end
		end
	end});
	spawn(function()
		while wait(1) do
			for _, v in pairs(game.Workspace.Golds:GetChildren()) do
				v.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame;
			end
			for i = 10008, 10016 do
				if getgenv().Settings.AutoBuyGems[i] then
					local args = {[1]=i};
					game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("MapShopExchange"):FireServer(unpack(args));
				end
			end
		end
	end);
end
function CheckPetsEquipped()
	pcall(function()
		for _, v in pairs(WeaponsInventory.localPlayerData.heros) do
			if (v.isEquip == true) then
				table.insert(getgenv().Settings.mespetsequiper, v.guid);
			end
		end
	end);
end
CheckPetsEquipped();
spawn(function()
	local function getNearestChest()
		local nearest, dist = nil, getgenv().Settings.Range;
		local Players = game.Players;
		local localPlayer = Players.LocalPlayer;
		local localCharacter = localPlayer.Character;
		local humanoidRootPart = localCharacter and localCharacter:FindFirstChild("HumanoidRootPart");
		if not humanoidRootPart then
			return;
		end
		for _, enemy in pairs(Workspace.Enemys:GetChildren()) do
			if (enemy:FindFirstChild("HumanoidRootPart") and enemy.HumanoidRootPart:FindFirstChild("EnemyNameGui") and (enemy.HumanoidRootPart.EnemyNameGui.HealthNum.Text ~= "0")) then
				local distance = (humanoidRootPart.Position - enemy.HumanoidRootPart.Position).magnitude;
				if (distance < dist) then
					dist = distance;
					nearest = enemy;
				end
			end
		end
		return nearest;
	end
	while task.wait() do
		if getgenv().Settings.AutoFarm then
			local nearestEnemy = getNearestChest();
			if nearestEnemy then
				spawn(function()
					if getgenv().Settings.WalkToEnemy then
						if nearestEnemy:FindFirstChild("HumanoidRootPart") then
							player.Character.Humanoid:MoveTo(nearestEnemy.HumanoidRootPart.Position);
						end
					end
				end);
				spawn(function()
					local args = {nearestEnemy:GetAttribute("EnemyGuid")};
					game:GetService("ReplicatedStorage").Remotes.ClickEnemy:InvokeServer(unpack(args));
					game:GetService("ReplicatedStorage").Remotes.PlayerClickAttack:FireServer(unpack(args));
				end);
				if getgenv().Settings.DamageBoost then
					for c, d in pairs(getgenv().Settings.mespetsequiper) do
						local a = {[1]={heroGuid=tostring(d),harmIndex=1,isSkill=false,skillId=200003}};
						game:GetService("ReplicatedStorage").Remotes.HeroSkillHarm:FireServer(unpack(a));
					end
				end
			end
		end
	end
end);

SwordSec:AddToggle({Name="Auto Fuse Swords",Callback=function(autoFuseSwords)
	if autoFuseSwords then
		getgenv().Settings.autoFuseSwords = true;
		while getgenv().Settings.autoFuseSwords do
			wait(1);
			pcall(function()
				game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("FuseWeapon"):FireServer();
			end);
		end
	else
		getgenv().Settings.autoFuseSwords = false;
	end
end});


local WeaponsInventory = require(game:GetService("ReplicatedStorage").Scripts.Client.Manager.PlayerManager);

pcall(function()
    if WeaponsInventory.localPlayerData then
        for _, v in pairs(WeaponsInventory.localPlayerData.weapons) do
            if v.isEquip and v.isLock then
                table.insert(getgenv().Settings.mespetsequiper, v.guid);
            end
        end
    else
        print("localPlayerData is not loaded yet. Please try again later.")
    end
end);

SwordSec:AddToggle({
    Name="Auto Delete Weapons",
    Callback=function(autoSellWeapons)
        if autoSellWeapons then
            getgenv().Settings.autoSellWeapons = true;
            while getgenv().Settings.autoSellWeapons do
                wait(1);
                if WeaponsInventory.localPlayerData then
                    for _, v in pairs(WeaponsInventory.localPlayerData.weapons) do
                        if not v.isEquip and not v.isLock then
                            local args = {[1]={[1]=v.guid}};
                            game:GetService("ReplicatedStorage").Remotes.DeleteWeapons:FireServer(unpack(args));
                        end
                    end
                else
                    print("localPlayerData is not loaded yet. Please try again later.")
                end
            end
        else
            getgenv().Settings.autoSellWeapons = false;
        end
    end
});

SwordSec:AddToggle({Name="Auto Forge Equipped Sword",Callback=function(autoForgeSword)
	if autoForgeSword then
		getgenv().Settings.autoForgeSword = true;
		while getgenv().Settings.autoForgeSword do
			wait(1e-7);
			for _, v in pairs(WeaponsInventory.localPlayerData.weapons) do
				if v.isEquip then
					local args = {[1]=v.guid};
					game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("ForgeWeapon"):InvokeServer(unpack(args));
				end
			end
		end
	else
		getgenv().Settings.autoForgeSword = false;
	end
end});
