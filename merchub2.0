local OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/shlexware/Orion/main/source"))();
local Window = OrionLib:MakeWindow({Name="MercilessHub",HidePremium=false,SaveConfig=true,ConfigFolder="WendelCfg",IntroEnabled=false});
G = {AutoAtk=false,AutoDungeon=false,AutoBuyGems={[10008]=false,[10009]=false,[10010]=false,[10011]=false,[10012]=false,[10013]=false,[10014]=false,[10015]=false,[10016]=false},mespetsequiper={},Range=200,AutoFarm=true,WalkToEnemy=false,DamageBoost=true,DamageNumber=0.99,autoFuseSwords=false,autoSellSwords=false,autoForgeSwords=false};
spawn(function()
	for i, v in pairs(getconnections(game:GetService("Players").LocalPlayer.Idled)) do
		v:Disable();
	end
end);
spawn(function()
	while wait(15) do
		local VirtualUser = game:service("VirtualUser");
		VirtualUser:CaptureController();
		VirtualUser:ClickButton2(Vector2.new());
	end
end);
local function AutoAtk()
	while G.AutoAtk do
		game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 75;
		game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("PlayerClickAttack"):FireServer();
		wait(0.01);
	end
end
local PlayerTab = Window:MakeTab({Name="Player",Icon="rbxassetid://4483345998",PremiumOnly=false});
local ScriptsTab = Window:MakeTab({Name="Scripts",Icon="rbxassetid://4483345998",PremiumOnly=false});
ScriptsTab:AddToggle({Name="Kill Aura",Callback=function(state)
	if state then
		G.AutoFarm = not G.AutoFarm;
	end
end});
local playerNames = {};
for _, player in pairs(game.Players:GetPlayers()) do
	table.insert(playerNames, player.Name);
end
PlayerTab:AddDropdown({Name="Select Player",Options=playerNames,Callback=function(selectedPlayer)
	G.selectedPlayer = selectedPlayer;
end});
PlayerTab:AddButton({Name="Trade Selected Player",Callback=function()
	if G.selectedPlayer then
		game:GetService("ReplicatedStorage").Remotes.SendTrade:InvokeServer(game:GetService("Players")[G.selectedPlayer]);
	else
		warn("No player selected.");
	end
end});
PlayerTab:AddButton({Name="Refresh Player List",Callback=function()
	playerNames = {};
	for _, player in pairs(game.Players:GetPlayers()) do
		table.insert(playerNames, player.Name);
	end
	PlayerTab:GetElement("Select Player"):UpdateOptions(playerNames);
end});
PlayerTab:AddButton({Name="Anti-Lag",Callback=function()
	for a, b in pairs(game.ReplicatedStorage.SkillEffects:GetDescendants()) do
		if (b:IsA("Part") or b:IsA("MeshPart")) then
			b.Transparency = 1;
		end
		if (b:IsA("ParticleEmitter") or b:IsA("Beam")) then
			b.Enabled = false;
		end
	end
	game.ReplicatedStorage.Effect.AttackNum.Enabled = false;
	local c = game;
	local d = c.Workspace;
	local e = c.Lighting;
	local f = d.Terrain;
	f.WaterWaveSize = 0;
	f.WaterWaveSpeed = 0;
	f.WaterReflectance = 0;
	f.WaterTransparency = 0;
	e.GlobalShadows = false;
	e.FogEnd = 8999999488;
	e.Brightness = 0;
	settings().Rendering.QualityLevel = "Level01";
	for g, h in pairs(c:GetDescendants()) do
		if (h:IsA("Part") or h:IsA("Union") or h:IsA("CornerWedgePart") or h:IsA("TrussPart")) then
			h.Reflectance = 0;
		elseif (h:IsA("Decal") or h:IsA("Texture")) then
			h.Transparency = 0;
		elseif (h:IsA("ParticleEmitter") or h:IsA("Trail")) then
			h.Lifetime = NumberRange.new(0);
		elseif h:IsA("Explosion") then
			h.BlastPressure = 0;
			h.BlastRadius = 0;
		elseif (h:IsA("Fire") or h:IsA("SpotLight") or h:IsA("Smoke") or h:IsA("Sparkles")) then
			h.Enabled = false;
		elseif h:IsA("MeshPart") then
			h.Reflectance = 0;
		end
	end
	for g, i in pairs(e:GetChildren()) do
		if (i:IsA("BlurEffect") or i:IsA("SunRaysEffect") or i:IsA("ColorCorrectionEffect") or i:IsA("BloomEffect") or i:IsA("DepthOfFieldEffect")) then
			i.Enabled = false;
		end
	end
	sethiddenproperty(game.Lighting, "Technology", "Compatibility");
end});
PlayerTab:AddButton({Name="Dupe",Callback=function()
	game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("DeleteMultipleHero"):Destroy();
end});
AutoBuyTab:AddButton({Name="AutoBuy Gem Level 7(Ruby)",Callback=function()
	while wait() do
		local args = {[1]=10014};
		game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("MapShopExchange"):FireServer(unpack(args));
	end
end});
AutoBuyTab:AddButton({Name="AutoBuy Gem Level 7(Sapphire)",Callback=function()
	while wait() do
		local args = {[1]=10015};
		game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("MapShopExchange"):FireServer(unpack(args));
	end
end});
AutoBuyTab:AddButton({Name="AutoBuy Gem Level 7(Emerald)",Callback=function()
	while wait() do
		local args = {[1]=10016};
		game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("MapShopExchange"):FireServer(unpack(args));
	end
end});
autoGainPower = false;
autoGainPowerLoop = nil;
fireDelay = 1;
ScriptsTab:AddToggle({Name="AutoGainPower",Default=false,Callback=function(Value)
	autoGainPower = Value;
	print("Auto Gain Pwr is " .. tostring(autoGainPower));
	if autoGainPower then
		autoGainPowerLoop = game:GetService("RunService").Heartbeat:Connect(function()
			local remotes = game:GetService("ReplicatedStorage"):FindFirstChild("Remotes");
			if (remotes and remotes:FindFirstChild("PlayerClickAttack")) then
				remotes.PlayerClickAttack:FireServer();
			end
			wait(fireDelay);
		end);
	elseif autoGainPowerLoop then
		autoGainPowerLoop:Disconnect();
		autoGainPowerLoop = nil;
	end
end});
ScriptsTab:AddButton({Name="SimpleSpy",Callback=function()
	loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/78n/SimpleSpy/main/SimpleSpyBeta.lua"))();
end});
local AutoDungeonTab = Window:MakeTab({Name="Auto-Dungeon",Icon="rbxassetid://4483345998",PremiumOnly=false});
local AutoRaidTab = Window:MakeTab({Name="Auto-Raid",Icon="rbxassetid://4483345998",PremiumOnly=false});
AutoRaidTab:AddButton({Name="AutoCollectChestInRaid",Callback=function()
	loadstring(game:HttpGet("https://raw.githubusercontent.com/xALLQWT/AUTORAID/main/g"))();
end});
local difficultyDropdown = AutoRaidTab:AddDropdown({Name="Difficulty",Options={"Easy","Medium","Hard","Impossible"},CurrentOption="1",Callback=function(option)
	G.difficulty = tonumber(option);
end});
local AutoRaidToggle = AutoRaidTab:AddToggle({Name="Auto-Raid",Default=false,Callback=function(Value)
	if Value then
		local function restartScript()
			local userID = game.Players.LocalPlayer.UserId;
			local args = {[1]="Room3"};
			game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("EnterRaidRoom"):FireServer(unpack(args));
			args = {[1]={difficulty=G.difficulty,roomName="Room3",selectMapId=50105}};
			game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("SelectRaidsDifficulty"):FireServer(unpack(args));
			args = {[1]={userIds={[1]=userID},roomName="Room3"}};
			game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("StartChallengeRaidMap"):InvokeServer(unpack(args));
			game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("LocalPlayerTeleportSuccess"):InvokeServer();
			wait(240);
			args = {[1]={currentSlotIndex=1,toMapId=50201}};
			game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("QuitRaidsMap"):InvokeServer(unpack(args));
			wait(60);
			restartScript();
		end
		restartScript();
	end
end});
local gems = {{Name="Lvl 3 Ruby",Value=10008},{Name="Lvl 3 Sapphire",Value=10009},{Name="Lvl 3 Emerald",Value=10010},{Name="Lvl 5 Ruby",Value=10011},{Name="Lvl 5 Sapphire",Value=10012},{Name="Lvl 5 Emerald",Value=10013},{Name="Lvl 7 Ruby",Value=10014},{Name="Lvl 7 Sapphire",Value=10015},{Name="Lvl 7 Emerald",Value=10016}};
for _, gem in ipairs(gems) do
	AutoBuyTab:AddToggle({Name=("AutoBuy " .. gem.Name),Default=false,Callback=function(Value)
		G.AutoBuyGems[gem.Value] = not G.AutoBuyGems[gem.Value];
	end});
end
AutoDungeonTab:AddSection({Name="Auto-Dungeon"});
local function TeleportToAndFromDungeon(dungeonMapId, returnMapId, returnTime)
	game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("LocalPlayerTeleport"):FireServer({mapId=dungeonMapId});
	wait(returnTime);
	game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("LocalPlayerTeleport"):FireServer({mapId=returnMapId});
end
AutoDungeonTab:AddToggle({Name="Auto-Dungeon(FINALLY FIXED!!!)",Default=false,Callback=function(Value)
	if Value then
		while true do
			local currentTime = os.time();
			local nextTeleportTime = (math.ceil(currentTime / (30 * 60)) * 30 * 60) - 15;
			local waitTime = nextTeleportTime - currentTime;
			wait(waitTime);
			TeleportToAndFromDungeon(50016, 50001, 15 * 60);
		end
	end
end});
spawn(function()
	while wait(1) do
		for _, v in pairs(game.Workspace.Golds:GetChildren()) do
			v.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame;
		end
		for i = 10008, 10016 do
			if G.AutoBuyGems[i] then
				local args = {[1]=i};
				game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("MapShopExchange"):FireServer(unpack(args));
			end
		end
	end
end);
function CheckPetsEquipped()
	pcall(function()
		for _, v in pairs(WeaponsInventory.localPlayerData.heros) do
			if (v.isEquip == true) then
				table.insert(G.mespetsequiper, v.guid);
			end
		end
	end);
end
spawn(function()
	local function getNearestChest()
		local nearest, dist = nil, G.Range;
		local Players = game.Players;
		local localPlayer = Players.LocalPlayer;
		local localCharacter = localPlayer.Character;
		local humanoidRootPart = localCharacter and localCharacter:FindFirstChild("HumanoidRootPart");
		if not humanoidRootPart then
			return;
		end
		for _, enemy in pairs(Workspace.Enemys:GetChildren()) do
			if (enemy:FindFirstChild("HumanoidRootPart") and enemy.HumanoidRootPart:FindFirstChild("EnemyNameGui") and (enemy.HumanoidRootPart.EnemyNameGui.HealthNum.Text ~= "0")) then
				local distance = (humanoidRootPart.Position - enemy.HumanoidRootPart.Position).magnitude;
				if (distance < dist) then
					dist = distance;
					nearest = enemy;
				end
			end
		end
		return nearest;
	end
	while task.wait() do
		if G.AutoFarm then
			local nearestEnemy = getNearestChest();
			if nearestEnemy then
				spawn(function()
					if G.WalkToEnemy then
						if nearestEnemy:FindFirstChild("HumanoidRootPart") then
							player.Character.Humanoid:MoveTo(nearestEnemy.HumanoidRootPart.Position);
						end
					end
				end);
				spawn(function()
					local args = {nearestEnemy:GetAttribute("EnemyGuid")};
					game:GetService("ReplicatedStorage").Remotes.ClickEnemy:InvokeServer(unpack(args));
					game:GetService("ReplicatedStorage").Remotes.PlayerClickAttack:FireServer(unpack(args));
				end);
				if G.DamageBoost then
					for c, d in pairs(G.mespetsequiper) do
						local a = {[1]={heroGuid=tostring(d),harmIndex=1,isSkill=false,skillId=200003}};
						game:GetService("ReplicatedStorage").Remotes.HeroSkillHarm:FireServer(unpack(a));
					end
				end
			end
		end
	end
end);
ScriptsTab:AddToggle({Name="Auto Fuse Swords",Callback=function(autoFuseSwords)
	if autoFuseSwords then
		G.autoFuseSwords = true;
		while G.autoFuseSwords do
			wait(1);
			pcall(function()
				game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("FuseWeapon"):FireServer();
			end);
		end
	else
		G.autoFuseSwords = false;
	end
end});
local WeaponsInventory = require(game:GetService("ReplicatedStorage").Scripts.Client.Manager.PlayerManager);
pcall(function()
	if WeaponsInventory.localPlayerData then
		for _, v in pairs(WeaponsInventory.localPlayerData.weapons) do
			if (v.isEquip and v.isLock) then
				table.insert(G.mespetsequiper, v.guid);
			end
		end
	else
		print("localPlayerData is not loaded yet. Please try again later.");
	end
end);
ScriptsTab:AddToggle({Name="Auto Delete Weapons",Callback=function(autoSellSwords)
	if autoSellSwords then
		G.autoSellSwords = true;
		while G.autoSellSwords do
			wait(1);
			if WeaponsInventory.localPlayerData then
				for _, v in pairs(WeaponsInventory.localPlayerData.weapons) do
					if (not v.isEquip and not v.isLock) then
						local args = {[1]={[1]=v.guid}};
						game:GetService("ReplicatedStorage").Remotes.DeleteWeapons:FireServer(unpack(args));
					end
				end
			else
				print("localPlayerData is not loaded yet. Please try again later.");
			end
		end
	else
		G.autoSellSwords = false;
	end
end});
ScriptsTab:AddToggle({Name="Auto Forge Equipped Sword",Callback=function(autoForgeSword)
	if autoForgeSword then
		G.autoForgeSword = true;
		while G.autoForgeSword do
			wait(1e-7);
			for _, v in pairs(WeaponsInventory.localPlayerData.weapons) do
				if v.isEquip then
					local args = {[1]=v.guid};
					game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("ForgeWeapon"):InvokeServer(unpack(args));
				end
			end
		end
	else
		G.autoForgeSword = false;
	end
end});
