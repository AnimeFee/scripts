local OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/shlexware/Orion/main/source"))();
local Window = OrionLib:MakeWindow({Name="raiding",HidePremium=false,SaveConfig=true,ConfigFolder="WendelCfg",IntroEnabled=false});
local RaidTab = Window:MakeTab({Name="AutoRaid",Icon="rbxassetid://4483345998",PremiumOnly=false});
local Raid = RaidTab:AddSection({Name="Raidss"});
local Relog = RaidTab:AddSection({Name="Rejoin(Will Restart Raid Time)"});
local FarmSec = RaidTab:AddSection({Name="Farm"});

local settings = {
    autoraid = false,
    selectedMap = "Souls",
    AutoFarm = false,
    DamageBoost = true,
    mespetsequiper = {},
    GoldCollect = false,
    Range = 1000,
}

Raid:AddDropdown({Name="Select Map",Options={"Souls","Book 1","Book 2","Book 3"},Default="",Callback=function(option)
    settings.selectedMap = option;
end});
Raid:AddToggle({Name="Start Auto Raid",Default=false,Callback=function(bool)
    settings.autoraid = bool;
    if bool then
        doRaid();
    end
end});
Relog:AddButton({Name="Rejoin Button",Callback=function()
    game:GetService("TeleportService"):Teleport(game.PlaceId, game.Players.LocalPlayer);
end});

FarmSec:AddToggle({Name="Auto Farm",Callback=function(v0)
    if v0 then
        settings.AutoFarm = true;
    else
        settings.AutoFarm = false;
    end
end});

local WeaponsInventory = require(game:GetService("ReplicatedStorage").Scripts.Client.Manager.PlayerManager)
pcall(function()
    for _, v in pairs(WeaponsInventory.localPlayerData.heros) do
        if v.isEquip == true and v.isLock == true then
            table.insert(settings.mespetsequiper, v.guid)
        end
    end
end)

spawn(function()
    local function GetEnemies()
        local nearest, dist = nil, settings.Range
        local Players = game.Players
        local localPlayer = Players.LocalPlayer
        local localCharacter = localPlayer.Character
        local humanoidRootPart = localCharacter and localCharacter:FindFirstChild("HumanoidRootPart")
        if not humanoidRootPart then
            return
        end

        for _, enemy in pairs(Workspace.Enemys:GetChildren()) do
            if enemy:FindFirstChild("HumanoidRootPart") and enemy.HumanoidRootPart:FindFirstChild("EnemyNameGui") and enemy.HumanoidRootPart.EnemyNameGui.HealthNum.Text ~= "0" then
                local distance = (humanoidRootPart.Position - enemy.HumanoidRootPart.Position).magnitude
                if distance < dist then
                    dist = distance
                    nearest = enemy
                end
            end
        end
        return nearest
    end

        if settings.AutoFarm then
            local nearestEnemy = GetEnemies()

            if nearestEnemy then
                if settings.WalkToEnemy then
                    if nearestEnemy:FindFirstChild("HumanoidRootPart") then
                        player.Character.Humanoid:MoveTo(nearestEnemy.HumanoidRootPart.Position)
                    end
                end

                if settings.DamageBoost then
                    for _, petGuid in pairs(settings.mespetsequiper) do
                        local args = { { ["heroGuid"] = tostring(petGuid), ["harmIndex"] = 1, ["isSkill"] = false, ["skillId"] = 200003 } }
                        game:GetService("ReplicatedStorage").Remotes.HeroSkillHarm:FireServer(unpack(args))
                    end
                end

                local args = { nearestEnemy:GetAttribute("EnemyGuid") }
                game:GetService("ReplicatedStorage").Remotes.ClickEnemy:InvokeServer(unpack(args))
                game:GetService("ReplicatedStorage").Remotes.PlayerClickAttack:FireServer(unpack(args))
            end
        end
    end
end)

FarmSec:AddToggle({Name="Auto Collect Drops",Callback=function(v1)
    if v1 then
        settings.GoldCollect = not settings.GoldCollect;
        if settings.GoldCollect then
            spawn(function()
                while wait() do
                    for v8, v9 in pairs(game.Workspace.Golds:GetChildren()) do
                        v9.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame;
                    end
                end
            end);
        end
    end
end})

function doRaid()
    while settings.autoraid do
        local args = {};
        if (settings.selectedMap == "Souls") then
            args = "Room4";
            game:GetService("ReplicatedStorage").Remotes.EnterRaidRoom:FireServer(args);
            args = {difficulty=4,roomName="Room4",selectMapId=50102};
            game:GetService("ReplicatedStorage").Remotes.SelectRaidsDifficulty:FireServer(args);
            task.wait(0.5);
            args = {userIds={game.Players.LocalPlayer.UserId},roomName="Room4"};
            game:GetService("ReplicatedStorage").Remotes.StartChallengeRaidMap:InvokeServer(args);
            task.wait(1);
            local checkRemainingEnnemies = game.Workspace.Enemys:GetChildren();
            if (#checkRemainingEnnemies <= 0) then
                args = 1;
                game:GetService("ReplicatedStorage").Remotes.GainRaidsRewards:InvokeServer(args);
                task.wait(1);
                local args = {[1]={currentSlotIndex=1,toMapId=50201}};
                game:GetService("ReplicatedStorage").Remotes.QuitRaidsMap:InvokeServer(unpack(args));
                getgenv().autoraid = false;
            end
        elseif (settings.selectedMap == "Book 1") then
            args = "Room4";
            game:GetService("ReplicatedStorage").Remotes.EnterRaidRoom:FireServer(args);
            args = {difficulty=4,roomName="Room4",selectMapId=50103};
            game:GetService("ReplicatedStorage").Remotes.SelectRaidsDifficulty:FireServer(args);
            task.wait(0.5);
            args = {userIds={game.Players.LocalPlayer.UserId},roomName="Room4"};
            game:GetService("ReplicatedStorage").Remotes.StartChallengeRaidMap:InvokeServer(args);
            task.wait(1);
            local checkRemainingEnnemies = game.Workspace.Enemys:GetChildren();
            if (#checkRemainingEnnemies <= 0) then
                args = 1;
                game:GetService("ReplicatedStorage").Remotes.GainRaidsRewards:InvokeServer(args);
                task.wait(1);
                local args = {[1]={currentSlotIndex=1,toMapId=50201}};
                game:GetService("ReplicatedStorage").Remotes.QuitRaidsMap:InvokeServer(unpack(args));
                getgenv().autoraid = false;
            end
        elseif (settings.selectedMap == "Book 3") then
            args = "Room4";
            game:GetService("ReplicatedStorage").Remotes.EnterRaidRoom:FireServer(args);
            args = {difficulty=4,roomName="Room4",selectMapId=50104};
            game:GetService("ReplicatedStorage").Remotes.SelectRaidsDifficulty:FireServer(args);
            task.wait(0.5);
            args = {userIds={game.Players.LocalPlayer.UserId},roomName="Room4"};
            game:GetService("ReplicatedStorage").Remotes.StartChallengeRaidMap:InvokeServer(args);
            task.wait(1);
            local checkRemainingEnnemies = game.Workspace.Enemys:GetChildren();
            if (#checkRemainingEnnemies <= 0) then
                args = 1;
                game:GetService("ReplicatedStorage").Remotes.GainRaidsRewards:InvokeServer(args);
                task.wait(1);
                local args = {[1]={currentSlotIndex=1,toMapId=50201}};
                game:GetService("ReplicatedStorage").Remotes.QuitRaidsMap:InvokeServer(unpack(args));
                getgenv().autoraid = false;
            end
        elseif (settings.selectedMap == "Book 4") then
            args = "Room4";
            game:GetService("ReplicatedStorage").Remotes.EnterRaidRoom:FireServer(args);
            args = {difficulty=4,roomName="Room4",selectMapId=50105};
            game:GetService("ReplicatedStorage").Remotes.SelectRaidsDifficulty:FireServer(args);
            task.wait(0.5);
            args = {userIds={game.Players.LocalPlayer.UserId},roomName="Room4"};
            game:GetService("ReplicatedStorage").Remotes.StartChallengeRaidMap:InvokeServer(args);
            task.wait(1);
            local checkRemainingEnnemies = game.Workspace.Enemys:GetChildren();
            if (#checkRemainingEnnemies <= 0) then
                args = 1;
                game:GetService("ReplicatedStorage").Remotes.GainRaidsRewards:InvokeServer(args);
                task.wait(1);
                local args = {[1]={currentSlotIndex=1,toMapId=50201}};
                game:GetService("ReplicatedStorage").Remotes.QuitRaidsMap:InvokeServer(unpack(args));
                getgenv().autoraid = false;
            end
        end
    end
end
