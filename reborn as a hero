local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local Window = OrionLib:MakeWindow({Name = "All universe hub", HidePremium = false, IntroEnabled = false, SaveConfig = true, ConfigFolder = "OrionTest"})

local mainTab = Window:MakeTab({
  Name = "farm",
  Icon = "rbxassetid://4483345998",
  PremiumOnly = false
})

local othersTab = Window:MakeTab({
  Name = "extra",
  Icon = "rbxassetid://4483345998",
  PremiumOnly = false
})

--values
getgenv().train = false
getgenv().egg = false
getgenv().selectedTrain = "TrainPower001"
getgenv().selectedEgg = "Draw001"
getgenv().spin = false
getgenv().rebirth = false
getgenv().towerlvl = false
getgenv().killaura = false

-- functions
function doEgg()
  if getgenv().egg then
    local args = {
      [1] = "Hatch",
      [2] = getgenv().selectedEgg,
      [3] = {}
    }
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Pets"):WaitForChild("Re_Hatch"):FireServer(unpack(args))
    wait(0.1)
  end
end

function doTrain()
  if getgenv().train then
    local args = {
      [1] = getgenv().selectedTrain
    }
    game:GetService("ReplicatedStorage").Events.Game.Re_TrainPower:FireServer(unpack(args))
    wait(0.1)
  end
end

function dospin()
  if getgenv().spin then
    local args = {
      [1] = "Spin+10"
    }
    game:GetService("ReplicatedStorage").Events.Market.Re_Product:FireServer(unpack(args))
    wait(0.1)
  end
end

function dorebirth()
  if getgenv().rebirth then
    game:GetService("ReplicatedStorage").Events.Stats.Re_Rebirth:FireServer()
    wait(1)
  end
end

function dotower()
  if getgenv().towerlvl then
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Tower"):WaitForChild("Re_Challenge"):FireServer()
    wait(1)
  end
end

function dokillaura()
  if getgenv().killaura then
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local Events = ReplicatedStorage.Events.Fight

    local function damageNPC(npcName)
      local args = {
        [1] = npcName,
        [2] = 3 -- Assuming 3 is the damage value
      }
      Events.Re_TakeDamage:FireServer(unpack(args))
    end

    local function getNearbyNPCs(range)
      local nearbyNPCs = {}
      for _, npc in ipairs(workspace:GetDescendants()) do
        if npc:IsA("Model") and npc:FindFirstChild("Humanoid") then
          local distance = (npc.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
          if distance <= range then
            table.insert(nearbyNPCs, npc.Name)
          end
        end
      end
      return nearbyNPCs
    end

    local function toggleDamageAura()
      while damageEnabled do
        local nearbyNPCs = getNearbyNPCs(10) -- Adjust the range to your liking
        for _, npcName in ipairs(nearbyNPCs) do
          damageNPC(npcName)
        end
        wait(0.1)
      end
    end

    local damageEnabled = true
    toggleDamageAura() -- Enable damage aura
  end
end

--toggles
mainTab:AddToggle({
  Name = "kill aura!",
  Default = false,
  Callback = function(bool)
    getgenv().killaura = bool
    if bool then
      dokillaura()
    end
  end    
})

mainTab:AddDropdown({
  Name = "Select Train",
  Default = "TrainPower001",
  Options = {
    "TrainPower001", "TrainPower002", "TrainPower003", "TrainPower004", "TrainPower005", "TrainPower006",
    "TrainPower007", "TrainPower008", "TrainPower009", "TrainPower010", "TrainPower011", "TrainPower012",
    "TrainPower013", "TrainPower014", "TrainPower015", "TrainPower016", "TrainPower017", "TrainPower018",
    "TrainPower019", "TrainPower020", "TrainPower021", "TrainPower022", "TrainPower023", "TrainPower024",
    "TrainPower025", "TrainPower026", "TrainPower027", "TrainPower028", "TrainPower029", "TrainPower030",
    "TrainPower031", "TrainPower032", "TrainPower033", "TrainPower034", "TrainPower035", "TrainPower036",
    "TrainPower037", "TrainPower038", "TrainPower039", "TrainPower040", "TrainPower041", "TrainPower042"
  },
  Callback = function(value)
    getgenv().selectedTrain = value
  end    
})

mainTab:AddToggle({
  Name = "Auto Train",
  Default = false,
  Callback = function(bool)
    getgenv().train = bool
    if bool then
      doTrain()
    end
  end    
})

mainTab:AddDropdown({
  Name = "Select Train",
  Default = "TrainPower001",
  Options = {
    "Draw001", "Draw002", "Draw003", "Draw004", "Draw005", "Draw006",
    "Draw007", "Draw008", "Draw009", "Draw010", "Draw011", "Draw012",
    "Draw013", "Draw014", "Draw015", "Draw016", "Draw017", "Draw018",
    "Draw019", "Draw020", "Draw021", "Draw022", "Draw023", "Draw024",
  },
  Callback = function(value)
    getgenv().selectedEgg = value
  end    
})

mainTab:AddToggle({
  Name = "Auto Open",
  Default = false,
  Callback = function(bool)
    getgenv().egg = bool
    if bool then
      doEgg()
    end
  end    
})

--others tab 
othersTab:AddToggle({
  Name = "auto spin!",
  Default = false,
  Callback = function(bool)
    getgenv().spin = bool
    if bool then
      dospin()
    end
  end    
})

othersTab:AddToggle({
  Name = "auto rebirth!",
  Default = false,
  Callback = function(bool)
    getgenv().rebirth = bool
    if bool then
      dorebirth()
    end
  end    
})

othersTab:AddToggle({
  Name = "Go To Next Tower Lvl",
  Default = false,
  Callback = function(bool)
    getgenv().towerlvl = bool
    if bool then
      dotower()
    end
  end    
})

