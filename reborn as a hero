local OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/shlexware/Orion/main/source"))();
local Window = OrionLib:MakeWindow({Name="SOGAY",HidePremium=false,IntroEnabled=false,SaveConfig=true,ConfigFolder="OrionTest"});

--tabs
local infoTab = Window:MakeTab({Name = "Info & Credits",Icon = "rbxassetid://4483345998",PremiumOnly = false})
local mainTab = Window:MakeTab({Name="farm",Icon="rbxassetid://4483345998",PremiumOnly=false});
local EnCTab = Window:MakeTab({Name="Eggs/Chests",Icon="rbxassetid://4483345998",PremiumOnly=false});
local othersTab = Window:MakeTab({Name="Misc",Icon="rbxassetid://4483345998",PremiumOnly=false});


--sections
local EggsTab = EnCTab:AddSection({Name="Eggs"});
local ChestTab = EnCTab:AddSection({Name="Chests"});

--table
getgenv().train = false;
getgenv().egg = false;
getgenv().chest = false;
getgenv().selectedTrain = "TrainPower001";
getgenv().selectedEgg = "Draw001";
getgenv().selectedChest = "Box001";
getgenv().spin = false;
getgenv().rebirth = false;
getgenv().towerlvl = false;
getgenv().killaura = false;


--maintab
mainTab:AddToggle({Name="kill aura!",Default=false,Callback=function(bool)
	getgenv().killaura = bool;
	if bool then
		dokillaura();
	end
end});
mainTab:AddDropdown({Name="Select Train",Default="TrainPower001",Options={"TrainPower001","TrainPower002","TrainPower003","TrainPower004","TrainPower005","TrainPower006","TrainPower007","TrainPower008","TrainPower009","TrainPower010","TrainPower011","TrainPower012","TrainPower013","TrainPower014","TrainPower015","TrainPower016","TrainPower017","TrainPower018","TrainPower019","TrainPower020","TrainPower021","TrainPower022","TrainPower023","TrainPower024","TrainPower025","TrainPower026","TrainPower027","TrainPower028","TrainPower029","TrainPower030","TrainPower031","TrainPower032","TrainPower033","TrainPower034","TrainPower035","TrainPower036","TrainPower037","TrainPower038","TrainPower039","TrainPower040","TrainPower041","TrainPower042"},Callback=function(value)
	getgenv().selectedTrain = value;
end});
mainTab:AddButton({Name="god mode!",Callback=function()
	local old;
	old = hookmetamethod(game, "__namecall", function(self, ...)
		local args = {...};
		local method = getnamecallmethod();
		if ((tostring(self) == "Re_NpcDamage") and (method == "FireServer")) then
			warn("Remote has been freezed");
			return nil;
		end
		return old(self, ...);
	end);
	print("button pressed");
end});
mainTab:AddToggle({Name="Auto Train",Default=false,Callback=function(bool)
	getgenv().train = bool;
	if bool then
		doTrain();
	end
end});

--egg&chesttab
EggsTab:AddDropdown({Name="Select Egg",Default="",Options={"5 wins!","25 wins!","150 wins!","450 wins!","4k wins!","10k wins!","30k wins!","150k wins!","1.6m wins!","3.5m wins!","8m wins!","40m wins!","450m wins!","1B wins!","2B wins","10B wins!","150B wins!","300B wins!","600B wins!","3T wins!","30T eggs!","500T eggs!","15Qa wins!","300Qa wins!"},Callback=function(value)
	getgenv().selectedEgg = value;
end});
EggsTab:AddToggle({Name="Auto Open",Default=false,Callback=function(bool)
	getgenv().egg = bool;
	if bool then
		doEgg();
	end
end});
ChestTab:AddDropdown({Name="Select Chest",Default="Box001",Options={"Bronze Chest","Gold Chest","Diamond Chest"},Callback=function(chest)
	getgenv().selectedChest = chest;
end});
ChestTab:AddToggle({Name="Auto Open Chest",Default=false,Callback=function(bool)
	getgenv().chest = bool;
	if bool then
		dochest();
	end
end});

--otherstab
othersTab:AddToggle({Name="auto spin!",Default=false,Callback=function(bool)
	getgenv().spin = bool;
	if bool then
		dospin();
	end
end});
othersTab:AddToggle({Name="auto rebirth!",Default=false,Callback=function(bool)
	getgenv().rebirth = bool;
	if bool then
		dorebirth();
	end
end});
othersTab:AddToggle({Name="Go To Next Tower Lvl",Default=false,Callback=function(bool)
	getgenv().towerlvl = bool;
	if bool then
		dotower();
	end
end});

--info and credit tab stuff
infoTab:AddParagraph("Made By", "Illumi the Great (Omega24119)")
infoTab:AddParagraph("Helper", "Bloxfruit.Trader0835 (Goku)")
infoTab:AddParagraph("Information", "The eggs indicate which 5-win egg (pink) you opened, but it's purely visual. It awards you the corresponding pet of the egg you opened.")
infoTab:AddParagraph("Join Our Discord", "For more updates and scripts, join our Discord community by visiting the channel below:")
infoTab:AddButton({
  Name = "Copy youtube Link",
  Callback = function()
      setclipboard("https://www.youtube.com/@takatakgamer8521?si=q94tBpxKXPYuCCFM")
      print("Discord link copied to clipboard")
  end    
})

--functions

function doEgg()
	while getgenv().egg do
		if (getgenv().selectedEgg == "5 wins!") then
			local args = {[1]="Hatch",[2]="Draw001",[3]={}};
			game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Pets"):WaitForChild("Re_Hatch"):FireServer(unpack(args));
		elseif (getgenv().selectedEgg == "25 wins") then
			local args = {[1]="Hatch",[2]="Draw002",[3]={}};
			game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Pets"):WaitForChild("Re_Hatch"):FireServer(unpack(args));
		elseif (getgenv().selectedEgg == "150 wins!") then
			local args = {[1]="Hatch",[2]="Draw003",[3]={}};
			game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Pets"):WaitForChild("Re_Hatch"):FireServer(unpack(args));
		elseif (getgenv().selectedEgg == "450 wins!") then
			local args = {[1]="Hatch",[2]="Draw004",[3]={}};
			game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Pets"):WaitForChild("Re_Hatch"):FireServer(unpack(args));
		elseif (getgenv().selectedEgg == "4k wins!") then
			local args = {[1]="Hatch",[2]="Draw005",[3]={}};
			game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Pets"):WaitForChild("Re_Hatch"):FireServer(unpack(args));
		elseif (getgenv().selectedEgg == "10k wins!") then
			local args = {[1]="Hatch",[2]="Draw006",[3]={}};
			game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Pets"):WaitForChild("Re_Hatch"):FireServer(unpack(args));
		elseif (getgenv().selectedEgg == "30k wins!") then
			local args = {[1]="Hatch",[2]="Draw007",[3]={}};
			game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Pets"):WaitForChild("Re_Hatch"):FireServer(unpack(args));
		elseif (getgenv().selectedEgg == "150k wins!") then
			local args = {[1]="Hatch",[2]="Draw008",[3]={}};
			game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Pets"):WaitForChild("Re_Hatch"):FireServer(unpack(args));
		elseif (getgenv().selectedEgg == "1.6m wins!") then
			local args = {[1]="Hatch",[2]="Draw009",[3]={}};
			game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Pets"):WaitForChild("Re_Hatch"):FireServer(unpack(args));
		elseif (getgenv().selectedEgg == "3.5m wins!") then
			local args = {[1]="Hatch",[2]="Draw010",[3]={}};
			game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Pets"):WaitForChild("Re_Hatch"):FireServer(unpack(args));
		elseif (getgenv().selectedEgg == "8m wins!") then
			local args = {[1]="Hatch",[2]="Draw011",[3]={}};
			game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Pets"):WaitForChild("Re_Hatch"):FireServer(unpack(args));
		elseif (getgenv().selectedEgg == "40m wins!") then
			local args = {[1]="Hatch",[2]="Draw012",[3]={}};
			game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Pets"):WaitForChild("Re_Hatch"):FireServer(unpack(args));
		elseif (getgenv().selectedEgg == "450m wins") then
			local args = {[1]="Hatch",[2]="Draw013",[3]={}};
			game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Pets"):WaitForChild("Re_Hatch"):FireServer(unpack(args));
		elseif (getgenv().selectedEgg == "1B wins!") then
			local args = {[1]="Hatch",[2]="Draw014",[3]={}};
			game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Pets"):WaitForChild("Re_Hatch"):FireServer(unpack(args));
		elseif (getgenv().selectedEgg == "2B wins") then
			local args = {[1]="Hatch",[2]="Draw015",[3]={}};
			game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Pets"):WaitForChild("Re_Hatch"):FireServer(unpack(args));
		elseif (getgenv().selectedEgg == "10B wins!") then
			local args = {[1]="Hatch",[2]="Draw016",[3]={}};
			game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Pets"):WaitForChild("Re_Hatch"):FireServer(unpack(args));
		elseif (getgenv().selectedEgg == "150B wins!") then
			local args = {[1]="Hatch",[2]="Draw017",[3]={}};
			game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Pets"):WaitForChild("Re_Hatch"):FireServer(unpack(args));
		elseif (getgenv().selectedEgg == "300B wins!") then
			local args = {[1]="Hatch",[2]="Draw018",[3]={}};
			game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Pets"):WaitForChild("Re_Hatch"):FireServer(unpack(args));
		elseif (getgenv().selectedEgg == "600B wins!") then
			local args = {[1]="Hatch",[2]="Draw019",[3]={}};
			game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Pets"):WaitForChild("Re_Hatch"):FireServer(unpack(args));
		elseif (getgenv().selectedEgg == "3T wins!") then
			local args = {[1]="Hatch",[2]="Draw020",[3]={}};
			game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Pets"):WaitForChild("Re_Hatch"):FireServer(unpack(args));
		elseif (getgenv().selectedEgg == "30T eggs!") then
			local args = {[1]="Hatch",[2]="Draw021",[3]={}};
			game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Pets"):WaitForChild("Re_Hatch"):FireServer(unpack(args));
		elseif (getgenv().selectedEgg == "500T eggs!") then
			local args = {[1]="Hatch",[2]="Draw022",[3]={}};
			game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Pets"):WaitForChild("Re_Hatch"):FireServer(unpack(args));
		elseif (getgenv().selectedEgg == "15Qa wins!") then
			local args = {[1]="Hatch",[2]="Draw023",[3]={}};
			game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Pets"):WaitForChild("Re_Hatch"):FireServer(unpack(args));
		elseif (getgenv().selectedEgg == "300Qa wins!") then
			local args = {[1]="Hatch",[2]="Draw024",[3]={}};
			game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Pets"):WaitForChild("Re_Hatch"):FireServer(unpack(args));
		end
		wait(2);
	end
end

function doTrain()
	while getgenv().train do
		local args = {[1]=getgenv().selectedTrain};
		game:GetService("ReplicatedStorage").Events.Game.Re_TrainPower:FireServer(unpack(args));
		wait(0.1);
	end
end

function dospin()
	while getgenv().spin do
		local args = {[1]="Spin"};
		game:GetService("ReplicatedStorage").Events.Market.Re_Product:FireServer(unpack(args));
		wait(0.1);
	end
end

function dorebirth()
	while getgenv().rebirth do
		game:GetService("ReplicatedStorage").Events.Stats.Re_Rebirth:FireServer();
		wait(1);
	end
end

function dotower()
	while getgenv().towerlvl do
		game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Tower"):WaitForChild("Re_Challenge"):FireServer();
		wait(7);
	end
end

local args = {[1]="Hatch",[2]=tostring(getgenv().selectedChest)};
game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Tower"):WaitForChild("Re_Hatch"):FireServer(unpack(args));
function dochest()
	while getgenv().chest do
		if (getgenv().selectedEgg == "Bronze Chest") then
			local args = {[1]="Hatch",[2]="Box001"};
			game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Tower"):WaitForChild("Re_Hatch"):FireServer(unpack(args));
		elseif (getgenv().selectedEgg == "Gold Chest") then
			local args = {[1]="Hatch",[2]="Box002"};
			game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Tower"):WaitForChild("Re_Hatch"):FireServer(unpack(args));
		elseif (getgenv().selectedEgg == "Diamond Chest") then
			local args = {[1]="Hatch",[2]="Box003"};
			game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Tower"):WaitForChild("Re_Hatch"):FireServer(unpack(args));
			wait(0.1);
		end
	end


function dokillaura()
    while getgenv().killaura do
        local ReplicatedStorage = game:GetService("ReplicatedStorage");
        local Events = ReplicatedStorage.Events.Fight;
        local function damageNPC(npcName)
            local args = {[1]=npcName,[2]=3};
            Events.Re_TakeDamage:FireServer(unpack(args));
        end
        local NPCsToDamage = {"Npc001","Npc002","Npc003","Npc004","Npc005","Npc006","Npc007","Npc008","Npc009","Npc010","Npc011","Npc012","Npc013","Npc014","Npc015","Npc016","Npc017","Npc018","Npc019","Npc020","Npc021","Npc022","Npc023","Npc024","Npc025","Npc026","Npc027","Npc028","Npc029","Npc030","Npc031","Npc032","Npc033","Npc034","Npc035","Npc036","Npc037","Npc038","Npc039","Npc040","Npc041","Npc042","Npc043","Npc044","Npc045","Npc046","Npc047"};
        for _, npcName in ipairs(NPCsToDamage) do
            damageNPC(npcName);
        end
        wait(0.1); -- add a short delay to prevent excessive calls
    end
end
end
