local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local Window = OrionLib:MakeWindow({Name = "SOGAY", HidePremium = false, IntroEnabled = false, SaveConfig = true, ConfigFolder = "OrionTest"})

local mainTab = Window:MakeTab({
  Name = "farm",
  Icon = "rbxassetid://4483345998",
  PremiumOnly = false
})

local othersTab = Window:MakeTab({
  Name = "extra",
  Icon = "rbxassetid://4483345998",
  PremiumOnly = false
})

local EnCTab = Window:MakeTab({
  Name = "Eggs",
  Icon = "rbxassetid://4483345998",
  PremiumOnly = false
})


local EggsTab = EnCTab:AddSection({
  Name = "Eggs"
})

local ChestTab = EnCTab:AddSection({
  Name = "Chests"
})

--values
getgenv().train = false
getgenv().egg = false
getgenv().chest = false
getgenv().selectedTrain = "TrainPower001"
getgenv().selectedEgg = "Draw001"
getgenv().selectedChest = "Box001"
getgenv().spin = false
getgenv().rebirth = false
getgenv().towerlvl = false
getgenv().killaura = false

-- functions

function doEgg()
  while getgenv().egg do
    local args = {
      [1] = "Hatch",
      [2] = getgenv().selectedEgg,
      [3] = {}
    }
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Pets"):WaitForChild("Re_Hatch"):FireServer(unpack(args))
    wait(0.1)
  end
end

function doTrain()
  while getgenv().train do
    local args = {
      [1] = getgenv().selectedTrain
    }
    game:GetService("ReplicatedStorage").Events.Game.Re_TrainPower:FireServer(unpack(args))
    wait(0.1)
  end
end

function dospin()
  while getgenv().spin do
    local args = {
      [1] = "Spin"
    }
    game:GetService("ReplicatedStorage").Events.Market.Re_Product:FireServer(unpack(args))
    wait(0.1)
  end
end

function dorebirth()
  while getgenv().rebirth do
    game:GetService("ReplicatedStorage").Events.Stats.Re_Rebirth:FireServer()
    wait(1)
  end
end

function dotower()
  while getgenv().towerlvl do
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Tower"):WaitForChild("Re_Challenge"):FireServer()
    wait(7)
  end
end

function dochest()
while getgenv().chest == true do
    local args = {
      [1] = "Hatch",
      [2] = tostring(getgenv().selectedChest)
    }

    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Tower"):WaitForChild("Re_Hatch"):FireServer(unpack(args))
    wait(0.1)
  end

end

function dokillaura()
  while getgenv().killaura do
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local Events = ReplicatedStorage.Events.Fight
    local function damageNPC(npcName)
      local args = {
        [1] = npcName,
        [2] = 3
      }
      Events.Re_TakeDamage:FireServer(unpack(args))
    end

    local function toggleDamageForNPCs(npcNames)
      for _, npcName in ipairs(npcNames) do
        damageNPC(npcName)
      end
    end
    local NPCsToDamage = {
      "Npc001", "Npc002", "Npc003", "Npc004", "Npc005", "Npc006",
      "Npc007", "Npc008", "Npc009", "Npc010", "Npc011", "Npc012",
      "Npc013", "Npc014", "Npc015", "Npc016", "Npc017", "Npc018",
      "Npc019", "Npc020", "Npc021", "Npc022", "Npc023", "Npc024",
      "Npc025", "Npc026", "Npc027", "Npc028", "Npc029", "Npc030",
      "Npc031", "Npc032", "Npc033", "Npc034", "Npc035", "Npc036",
      "Npc037", "Npc038", "Npc039", "Npc040", "Npc041", "Npc042",
      "Npc043", "Npc044", "Npc045", "Npc046", "Npc047"
    }
    local damageEnabled = false
    local function toggleDamageAura()
      damageEnabled = not damageEnabled
      if damageEnabled then
        toggleDamageForNPCs(NPCsToDamage)
        print("Damage aura enabled")
      else
        print("Damage aura disabled")
      end
    end
    toggleDamageAura()
    wait(.1)
    toggleDamageAura()
    wait(.1)
  end
end

--toggles
mainTab:AddToggle({
  Name = "kill aura!",
  Default = false,
  Callback = function(bool)
    getgenv().killaura = bool
    if bool then
      dokillaura()
    end
  end    
})

mainTab:AddDropdown({
  Name = "Select Train",
  Default = "TrainPower001",
  Options = {
    "TrainPower001", "TrainPower002", "TrainPower003", "TrainPower004", "TrainPower005", "TrainPower006",
    "TrainPower007", "TrainPower008", "TrainPower009", "TrainPower010", "TrainPower011", "TrainPower012",
    "TrainPower013", "TrainPower014", "TrainPower015", "TrainPower016", "TrainPower017", "TrainPower018",
    "TrainPower019", "TrainPower020", "TrainPower021", "TrainPower022", "TrainPower023", "TrainPower024",
    "TrainPower025", "TrainPower026", "TrainPower027", "TrainPower028", "TrainPower029", "TrainPower030",
    "TrainPower031", "TrainPower032", "TrainPower033", "TrainPower034", "TrainPower035", "TrainPower036",
    "TrainPower037", "TrainPower038", "TrainPower039", "TrainPower040", "TrainPower041", "TrainPower042"
  },
  Callback = function(value)
    getgenv().selectedTrain = value
  end    
})

mainTab:AddButton({
  Name = "god mode!",
  Callback = function()
      local old
      old = hookmetamethod(game, "__namecall", function(self, ...)
          local args = {...}
          local method = getnamecallmethod()

          if tostring(self) == "Re_NpcDamage" and method == "FireServer" then 
              warn("Remote has been freezed")
              return nil 
          end 

          return old(self, ...)
      end)
          print("button pressed")
    end    
})

mainTab:AddToggle({
  Name = "Auto Train",
  Default = false,
  Callback = function(bool)
    getgenv().train = bool
    if bool then
      doTrain()
    end
  end    
})

local Eggname = {
  ["5 wins!"] = "Draw001",
  ["2 wins"] = "Draw002",
  ["150 wins!"] = "Draw003",
  ["450 wins!"] = "Draw004",
  ["4k wins!"] = "Draw005",
  ["10k wins!"] = "Draw006",
  ["30k wins!"] = "Draw007",
  ["150k wins!"] = "Draw008",
  ["1.6m wins!"] = "Draw009",
  ["3.5m wins!"] = "Draw010",
  ["8m wins!"] = "Draw011",
  ["40m wins!"] = "Draw012",
  ["450m wins"] = "Draw013",
  ["1B wins!"] = "Draw014",
  ["2B wins"] = "Draw015",
  ["10B wins!"] = "Draw016",
  ["150B wins!"] = "Draw017",
  ["300B wins!"] = "Draw018",
  ["600B wins!"] = "Draw019",
  ["3T wins!"] = "Draw020",
  ["30T eggs!"] = "Draw021",
  ["500T eggs!"] = "Draw022",
  ["15Qa wins!"] = "Draw023",
  ["300Qa wins!"] = "Draw024",
}

local options = {}
for name, value in pairs(Eggname) do
  table.insert(options, {name, value})
end

EggsTab:AddDropdown({
  Name = "Select Egg",
  Default = "",
  Options = options,
  Callback = function(value)
    getgenv().selectedEgg = value
  end
})

EggsTab:AddToggle({
  Name = "Auto Open",
  Default = false,
  Callback = function(bool)
    getgenv().egg = bool
    if bool then
      doEgg()
    end
  end
}) 

ChestTab:AddDropdown({
  Name = "Select Chest",
  Default = "Box001",
  Options = {"Box001","Box002","Box003"},
  Callback = function(chest)
    getgenv().selectedChest = chest
  end
})

ChestTab:AddToggle({
  Name = "Auto Open Chest",
  Default = false,
  Callback = function(bool)
    getgenv().chest = bool
    if bool then
      dochest()
    end
  end    
})

--others tab 
othersTab:AddToggle({
  Name = "auto spin!",
  Default = false,
  Callback = function(bool)
    getgenv().spin = bool
    if bool then
      dospin()
    end
  end    
})

othersTab:AddToggle({
  Name = "auto rebirth!",
  Default = false,
  Callback = function(bool)
    getgenv().rebirth = bool
    if bool then
      dorebirth()
    end
  end    
})

othersTab:AddToggle({
  Name = "Go To Next Tower Lvl",
  Default = false,
  Callback = function(bool)
    getgenv().towerlvl = bool
    if bool then
      dotower()
    end
  end    
})
